{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/tables/SimpleTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  &:nth-of-type(odd) {\\n    background-color: rgba(0, 0, 0, 0.025);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport { Grid, Link, Breadcrumbs as MuiBreadcrumbs, Card as MuiCard, CardContent as MuiCardContent, Divider as MuiDivider, Paper as MuiPaper, Table, TableBody, TableCell, TableHead, TableRow, Typography } from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\nimport { withStyles } from \"@material-ui/core/styles\";\nvar NavLink = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(RouterNavLink, Object.assign({\n    innerRef: ref\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }));\n});\nvar Card = styled(MuiCard)(spacing);\nvar CardContent = styled(MuiCardContent)(spacing);\nvar Divider = styled(MuiDivider)(spacing);\nvar Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\nvar Paper = styled(MuiPaper)(spacing);\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar CustomTableRow = styled(TableRow)(_templateObject()); // Data\n\nvar id = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return {\n    id: id,\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9)];\n\nfunction SimpleTableDemo() {\n  var _this2 = this;\n\n  return /*#__PURE__*/React.createElement(Card, {\n    mb: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    pb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Simple Table\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"A simple example with no frills.\")), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Fat (g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Carbs (g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Protein (g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.id,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, row.protein));\n  })))));\n}\n\nfunction CustomizedTableDemo() {\n  var _this3 = this;\n\n  return /*#__PURE__*/React.createElement(Card, {\n    mb: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    pb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Customized Table\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"If you have been reading the overrides documentation page but you are not confident jumping in, here are examples of how you can change the look of a \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"TableCell\"), \".\")), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Fat (g)\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Carbs (g)\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Protein (g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(CustomTableRow, {\n      key: row.id,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CustomTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, row.name), /*#__PURE__*/React.createElement(CustomTableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(CustomTableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(CustomTableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(CustomTableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, row.protein));\n  })))));\n}\n\nfunction SimpleTable() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    title: \"Simple Table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, \"Simple Table\"), /*#__PURE__*/React.createElement(Breadcrumbs, {\n    \"aria-label\": \"Breadcrumb\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    component: NavLink,\n    exact: true,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(Link, {\n    component: NavLink,\n    exact: true,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"Tables\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Simple Table\")), /*#__PURE__*/React.createElement(Divider, {\n    my: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleTableDemo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomizedTableDemo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default SimpleTable;","map":{"version":3,"sources":["/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/tables/SimpleTable.js"],"names":["React","styled","NavLink","RouterNavLink","Helmet","Grid","Link","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","CardContent","MuiCardContent","Divider","MuiDivider","Paper","MuiPaper","Table","TableBody","TableCell","TableHead","TableRow","Typography","spacing","withStyles","forwardRef","props","ref","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","CustomTableRow","id","createData","name","calories","fat","carbs","protein","rows","SimpleTableDemo","map","row","CustomizedTableDemo","SimpleTable"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  Divider as MuiDivider,\r\n  Paper as MuiPaper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst CardContent = styled(MuiCardContent)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst CustomTableRow = styled(TableRow)`\r\n  &:nth-of-type(odd) {\r\n    background-color: rgba(0, 0, 0, 0.025);\r\n  }\r\n`;\r\n\r\n// Data\r\nlet id = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\nfunction SimpleTableDemo() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent pb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Simple Table\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          A simple example with no frills.\r\n        </Typography>\r\n      </CardContent>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat (g)</TableCell>\r\n              <TableCell align=\"right\">Carbs (g)</TableCell>\r\n              <TableCell align=\"right\">Protein (g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction CustomizedTableDemo() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent pb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Customized Table\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          If you have been reading the overrides documentation page but you are\r\n          not confident jumping in, here are examples of how you can change the\r\n          look of a <code>TableCell</code>.\r\n        </Typography>\r\n      </CardContent>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <CustomTableCell>Dessert (100g serving)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Calories</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Fat (g)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Carbs (g)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Protein (g)</CustomTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <CustomTableRow key={row.id}>\r\n                <CustomTableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.calories}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.fat}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.carbs}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.protein}</CustomTableCell>\r\n              </CustomTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction SimpleTable() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Simple Table\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Simple Table\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Tables\r\n        </Link>\r\n        <Typography>Simple Table</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <SimpleTableDemo />\r\n          <CustomizedTableDemo />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SimpleTable;\r\n"]},"metadata":{},"sourceType":"module"}