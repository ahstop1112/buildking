{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/maps/GoogleMaps/DarkStyle.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 300px;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\nimport GoogleMapReact from \"google-map-react\";\nvar Card = styled(MuiCard)(spacing);\nvar Spacer = styled.div(spacing);\nvar GoogleMapReactWrapper = styled.div(_templateObject());\n\nfunction DarkStyle() {\n  var options = {\n    center: {\n      lat: 40.712784,\n      lng: -74.005941\n    },\n    zoom: 14\n  };\n\n  var getMapOptions = function getMapOptions() {\n    return {\n      fullscreenControl: true,\n      mapTypeControl: true,\n      scaleControl: true,\n      scrollwheel: false,\n      streetViewControl: true,\n      styles: [{\n        featureType: \"all\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          saturation: 36\n        }, {\n          color: \"#000000\"\n        }, {\n          lightness: 40\n        }]\n      }, {\n        featureType: \"all\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          visibility: \"on\"\n        }, {\n          color: \"#000000\"\n        }, {\n          lightness: 16\n        }]\n      }, {\n        featureType: \"all\",\n        elementType: \"labels.icon\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }, {\n        featureType: \"administrative\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 20\n        }]\n      }, {\n        featureType: \"administrative\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 17\n        }, {\n          weight: 1.2\n        }]\n      }, {\n        featureType: \"landscape\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 20\n        }]\n      }, {\n        featureType: \"poi\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 21\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 17\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 29\n        }, {\n          weight: 0.2\n        }]\n      }, {\n        featureType: \"road.arterial\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 18\n        }]\n      }, {\n        featureType: \"road.local\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 16\n        }]\n      }, {\n        featureType: \"transit\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 19\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#000000\"\n        }, {\n          lightness: 17\n        }]\n      }]\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Dark Style\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"Dark color scheme.\"), /*#__PURE__*/React.createElement(Spacer, {\n    mb: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GoogleMapReactWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    options: getMapOptions,\n    bootstrapURLKeys: {\n      key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\n    },\n    defaultCenter: options.center,\n    defaultZoom: options.zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default DarkStyle;","map":{"version":3,"sources":["/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/maps/GoogleMaps/DarkStyle.js"],"names":["React","styled","CardContent","Card","MuiCard","Typography","spacing","GoogleMapReact","Spacer","div","GoogleMapReactWrapper","DarkStyle","options","center","lat","lng","zoom","getMapOptions","fullscreenControl","mapTypeControl","scaleControl","scrollwheel","streetViewControl","styles","featureType","elementType","stylers","saturation","color","lightness","visibility","weight","key"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction DarkStyle() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n      styles: [\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              saturation: 36\r\n            },\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 40\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              visibility: \"on\"\r\n            },\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.icon\",\r\n          stylers: [\r\n            {\r\n              visibility: \"off\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            },\r\n            {\r\n              weight: 1.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"landscape\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 29\r\n            },\r\n            {\r\n              weight: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.arterial\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 18\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.local\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 19\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Dark Style\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Dark color scheme.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DarkStyle;\r\n"]},"metadata":{},"sourceType":"module"}