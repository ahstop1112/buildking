{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  height: 300px;\\n  width: 100%;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import{CardContent,Card as MuiCard,Typography}from\"@material-ui/core\";import{spacing}from\"@material-ui/system\";import GoogleMapReact from\"google-map-react\";var Card=styled(MuiCard)(spacing);var Spacer=styled.div(spacing);var GoogleMapReactWrapper=styled.div(_templateObject());function Markers(){var options={center:{lat:40.712784,lng:-74.005941},zoom:14};var getMapOptions=function getMapOptions(maps){return{fullscreenControl:true,mapTypeControl:true,mapTypeId:maps.MapTypeId.ROADMAP,scaleControl:true,scrollwheel:false,streetViewControl:true};};var renderMarkers=function renderMarkers(map,maps){new maps.Marker({position:{lat:40.712784,lng:-74.005941},map:map,title:\"Hello World!\"});};return/*#__PURE__*/React.createElement(Card,{mb:1},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",gutterBottom:true},\"Markers\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",gutterBottom:true},\"Identify a location on a map.\"),/*#__PURE__*/React.createElement(Spacer,{mb:6}),/*#__PURE__*/React.createElement(GoogleMapReactWrapper,null,/*#__PURE__*/React.createElement(GoogleMapReact,{options:getMapOptions,bootstrapURLKeys:{key:\"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"},defaultCenter:options.center,defaultZoom:options.zoom,onGoogleApiLoaded:function onGoogleApiLoaded(_ref){var map=_ref.map,maps=_ref.maps;return renderMarkers(map,maps);}}))));}export default Markers;","map":{"version":3,"sources":["/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/maps/GoogleMaps/Markers.js"],"names":["React","styled","CardContent","Card","MuiCard","Typography","spacing","GoogleMapReact","Spacer","div","GoogleMapReactWrapper","Markers","options","center","lat","lng","zoom","getMapOptions","maps","fullscreenControl","mapTypeControl","mapTypeId","MapTypeId","ROADMAP","scaleControl","scrollwheel","streetViewControl","renderMarkers","map","Marker","position","title","key"],"mappings":"8WAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,WAAT,CAAsBC,IAAI,GAAIC,CAAAA,OAA9B,CAAuCC,UAAvC,KAAyD,mBAAzD,CACA,OAASC,OAAT,KAAwB,qBAAxB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,GAAMJ,CAAAA,IAAI,CAAGF,MAAM,CAACG,OAAD,CAAN,CAAgBE,OAAhB,CAAb,CAEA,GAAME,CAAAA,MAAM,CAAGP,MAAM,CAACQ,GAAP,CAAWH,OAAX,CAAf,CAEA,GAAMI,CAAAA,qBAAqB,CAAGT,MAAM,CAACQ,GAAV,mBAA3B,CAKA,QAASE,CAAAA,OAAT,EAAmB,CACjB,GAAMC,CAAAA,OAAO,CAAG,CACdC,MAAM,CAAE,CACNC,GAAG,CAAE,SADC,CAENC,GAAG,CAAE,CAAC,SAFA,CADM,CAKdC,IAAI,CAAE,EALQ,CAAhB,CAQA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,CAAI,CAC5B,MAAO,CACLC,iBAAiB,CAAE,IADd,CAELC,cAAc,CAAE,IAFX,CAGLC,SAAS,CAAEH,IAAI,CAACI,SAAL,CAAeC,OAHrB,CAILC,YAAY,CAAE,IAJT,CAKLC,WAAW,CAAE,KALR,CAMLC,iBAAiB,CAAE,IANd,CAAP,CAQD,CATD,CAWA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAMV,IAAN,CAAe,CACnC,GAAIA,CAAAA,IAAI,CAACW,MAAT,CAAgB,CACdC,QAAQ,CAAE,CACRhB,GAAG,CAAE,SADG,CAERC,GAAG,CAAE,CAAC,SAFE,CADI,CAKda,GAAG,CAAHA,GALc,CAMdG,KAAK,CAAE,cANO,CAAhB,EAQD,CATD,CAWA,mBACE,oBAAC,IAAD,EAAM,EAAE,CAAE,CAAV,eACE,oBAAC,WAAD,mBACE,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,YAAY,KAArC,YADF,cAIE,oBAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,YAAY,KAAxC,kCAJF,cAQE,oBAAC,MAAD,EAAQ,EAAE,CAAE,CAAZ,EARF,cAUE,oBAAC,qBAAD,mBACE,oBAAC,cAAD,EACE,OAAO,CAAEd,aADX,CAEE,gBAAgB,CAAE,CAChBe,GAAG,CAAE,yCADW,CAFpB,CAKE,aAAa,CAAEpB,OAAO,CAACC,MALzB,CAME,WAAW,CAAED,OAAO,CAACI,IANvB,CAOE,iBAAiB,CAAE,oCAAGY,CAAAA,GAAH,MAAGA,GAAH,CAAQV,IAAR,MAAQA,IAAR,OAAmBS,CAAAA,aAAa,CAACC,GAAD,CAAMV,IAAN,CAAhC,EAPrB,EADF,CAVF,CADF,CADF,CA0BD,CAED,cAAeP,CAAAA,OAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Markers() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.ROADMAP,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  const renderMarkers = (map, maps) => {\r\n    new maps.Marker({\r\n      position: {\r\n        lat: 40.712784,\r\n        lng: -74.005941\r\n      },\r\n      map,\r\n      title: \"Hello World!\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Markers\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Identify a location on a map.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n            onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Markers;\r\n"]},"metadata":{},"sourceType":"module"}