{"ast":null,"code":"import _objectWithoutProperties from \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/components/Dialogs.js\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport { Avatar, Button, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormControlLabel, Grid, InputLabel, Link, List, ListItem, ListItemAvatar, ListItemText, MenuItem, Breadcrumbs as MuiBreadcrumbs, Card as MuiCard, Divider as MuiDivider, Paper as MuiPaper, Select, Switch, TextField, Typography } from \"@material-ui/core\";\nimport { Add as AddIcon, Person as PersonIcon } from \"@material-ui/icons\";\nimport { spacing } from \"@material-ui/system\";\nvar NavLink = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(RouterNavLink, Object.assign({\n    innerRef: ref\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }));\n});\nvar Card = styled(MuiCard)(spacing);\nvar Divider = styled(MuiDivider)(spacing);\nvar Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\nvar Paper = styled(MuiPaper)(spacing);\nvar emails = [\"username@gmail.com\", \"user02@gmail.com\"];\n\nvar SimpleDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(SimpleDialog, _React$Component);\n\n  var _super = _createSuper(SimpleDialog);\n\n  function SimpleDialog() {\n    var _this2;\n\n    _classCallCheck(this, SimpleDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _this2.handleClose = function () {\n      _this2.props.onClose(_this2.props.selectedValue);\n    };\n\n    _this2.handleListItemClick = function (value) {\n      _this2.props.onClose(value);\n    };\n\n    return _this2;\n  }\n\n  _createClass(SimpleDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          onClose = _this$props.onClose,\n          selectedValue = _this$props.selectedValue,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onClose\", \"selectedValue\"]);\n\n      return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"simple-dialog-title\",\n        open: true\n      }, other, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"simple-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, \"Set backup account\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, emails.map(function (email) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          button: true,\n          onClick: function onClick() {\n            return _this3.handleListItemClick(email);\n          },\n          key: email,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(PersonIcon, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        }))), /*#__PURE__*/React.createElement(ListItemText, {\n          primary: email,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        onClick: function onClick() {\n          return _this3.handleListItemClick(\"addAccount\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: \"add account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return SimpleDialog;\n}(React.Component);\n\nvar SimpleDialogDemo = /*#__PURE__*/function (_React$Component2) {\n  _inherits(SimpleDialogDemo, _React$Component2);\n\n  var _super2 = _createSuper(SimpleDialogDemo);\n\n  function SimpleDialogDemo() {\n    var _this4;\n\n    _classCallCheck(this, SimpleDialogDemo);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this4 = _super2.call.apply(_super2, [this].concat(args));\n    _this4.state = {\n      open: false,\n      selectedValue: emails[1]\n    };\n\n    _this4.handleClickOpen = function () {\n      _this4.setState({\n        open: true\n      });\n    };\n\n    _this4.handleClose = function (value) {\n      _this4.setState({\n        selectedValue: value,\n        open: false\n      });\n    };\n\n    return _this4;\n  }\n\n  _createClass(SimpleDialogDemo, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        mb: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, \"Simple Dialogs\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, \"Simple dialogs can provide additional details or actions about a list item.\"), /*#__PURE__*/React.createElement(Paper, {\n        mt: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, \"Open simple dialog\"), /*#__PURE__*/React.createElement(SimpleDialog, {\n        selectedValue: this.state.selectedValue,\n        open: this.state.open,\n        onClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Paper, {\n        mt: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, \"Selected: \", this.state.selectedValue)))));\n    }\n  }]);\n\n  return SimpleDialogDemo;\n}(React.Component);\n\nvar AlertDialog = /*#__PURE__*/function (_React$Component3) {\n  _inherits(AlertDialog, _React$Component3);\n\n  var _super3 = _createSuper(AlertDialog);\n\n  function AlertDialog() {\n    var _this5;\n\n    _classCallCheck(this, AlertDialog);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this5 = _super3.call.apply(_super3, [this].concat(args));\n    _this5.state = {\n      open: false\n    };\n\n    _this5.handleClickOpen = function () {\n      _this5.setState({\n        open: true\n      });\n    };\n\n    _this5.handleClose = function () {\n      _this5.setState({\n        open: false\n      });\n    };\n\n    return _this5;\n  }\n\n  _createClass(AlertDialog, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        mb: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, \"Alerts\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, \"Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation.\"), /*#__PURE__*/React.createElement(Paper, {\n        mt: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, \"Open alert dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      }, \"Agree\"))))));\n    }\n  }]);\n\n  return AlertDialog;\n}(React.Component);\n\nvar MaxWidthDialog = /*#__PURE__*/function (_React$Component4) {\n  _inherits(MaxWidthDialog, _React$Component4);\n\n  var _super4 = _createSuper(MaxWidthDialog);\n\n  function MaxWidthDialog() {\n    var _this6;\n\n    _classCallCheck(this, MaxWidthDialog);\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    _this6 = _super4.call.apply(_super4, [this].concat(args));\n    _this6.state = {\n      open: false,\n      fullWidth: true,\n      maxWidth: \"sm\"\n    };\n\n    _this6.handleClickOpen = function () {\n      _this6.setState({\n        open: true\n      });\n    };\n\n    _this6.handleClose = function () {\n      _this6.setState({\n        open: false\n      });\n    };\n\n    _this6.handleMaxWidthChange = function (event) {\n      _this6.setState({\n        maxWidth: event.target.value\n      });\n    };\n\n    _this6.handleFullWidthChange = function (event) {\n      _this6.setState({\n        fullWidth: event.target.checked\n      });\n    };\n\n    return _this6;\n  }\n\n  _createClass(MaxWidthDialog, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        mb: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }\n      }, \"Simple Dialogs\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }\n      }, \"Simple dialogs can provide additional details or actions about a list item.\"), /*#__PURE__*/React.createElement(Paper, {\n        mt: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }\n      }, \"Open max-width dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n        fullWidth: this.state.fullWidth,\n        maxWidth: this.state.maxWidth,\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      }, \"Optional sizes\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 19\n        }\n      }, \"You can set my maximum width and whether to adapt or not.\"), /*#__PURE__*/React.createElement(\"form\", {\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"max-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 23\n        }\n      }, \"maxWidth\"), /*#__PURE__*/React.createElement(Select, {\n        value: this.state.maxWidth,\n        onChange: this.handleMaxWidthChange,\n        inputProps: {\n          name: \"max-width\",\n          id: \"max-width\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }\n      }, \"xs\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }\n      }, \"sm\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }\n      }, \"md\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }, \"lg\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"xl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, \"xl\")))), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Switch, {\n          checked: this.state.fullWidth,\n          onChange: this.handleFullWidthChange,\n          value: \"fullWidth\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }\n        }),\n        label: \"Full width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 19\n        }\n      }, \"Close\")))))));\n    }\n  }]);\n\n  return MaxWidthDialog;\n}(React.Component);\n\nvar FormDialog = /*#__PURE__*/function (_React$Component5) {\n  _inherits(FormDialog, _React$Component5);\n\n  var _super5 = _createSuper(FormDialog);\n\n  function FormDialog() {\n    var _this7;\n\n    _classCallCheck(this, FormDialog);\n\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    _this7 = _super5.call.apply(_super5, [this].concat(args));\n    _this7.state = {\n      open: false\n    };\n\n    _this7.handleClickOpen = function () {\n      _this7.setState({\n        open: true\n      });\n    };\n\n    _this7.handleClose = function () {\n      _this7.setState({\n        open: false\n      });\n    };\n\n    return _this7;\n  }\n\n  _createClass(FormDialog, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        mb: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }\n      }, \"Form Dialogs\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }\n      }, \"Form dialogs allow users to fill out form fields within a dialog.\"), /*#__PURE__*/React.createElement(Paper, {\n        mt: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }\n      }, \"Open form dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 17\n        }\n      }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 19\n        }\n      }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), /*#__PURE__*/React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Email Address\",\n        type: \"email\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 19\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 19\n        }\n      }, \"Subscribe\")))))));\n    }\n  }]);\n\n  return FormDialog;\n}(React.Component);\n\nfunction Dialogs() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    title: \"Dialogs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }, \"Dialogs\"), /*#__PURE__*/React.createElement(Breadcrumbs, {\n    \"aria-label\": \"Breadcrumb\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    component: NavLink,\n    exact: true,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(Link, {\n    component: NavLink,\n    exact: true,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }, \"Components\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }\n  }, \"Dialogs\")), /*#__PURE__*/React.createElement(Divider, {\n    my: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleDialogDemo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AlertDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaxWidthDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Dialogs;","map":{"version":3,"sources":["/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/components/Dialogs.js"],"names":["React","styled","NavLink","RouterNavLink","Helmet","Avatar","Button","CardContent","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","Grid","InputLabel","Link","List","ListItem","ListItemAvatar","ListItemText","MenuItem","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","Divider","MuiDivider","Paper","MuiPaper","Select","Switch","TextField","Typography","Add","AddIcon","Person","PersonIcon","spacing","forwardRef","props","ref","emails","SimpleDialog","handleClose","onClose","selectedValue","handleListItemClick","value","classes","other","map","email","Component","SimpleDialogDemo","state","open","handleClickOpen","setState","AlertDialog","MaxWidthDialog","fullWidth","maxWidth","handleMaxWidthChange","event","target","handleFullWidthChange","checked","name","id","FormDialog","Dialogs"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  MenuItem,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Paper as MuiPaper,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { Add as AddIcon, Person as PersonIcon } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\n\r\nclass SimpleDialog extends React.Component {\r\n  handleClose = () => {\r\n    this.props.onClose(this.props.selectedValue);\r\n  };\r\n\r\n  handleListItemClick = value => {\r\n    this.props.onClose(value);\r\n  };\r\n\r\n  render() {\r\n    const { classes, onClose, selectedValue, ...other } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"simple-dialog-title\"\r\n        open={true}\r\n        {...other}\r\n      >\r\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n        <div>\r\n          <List>\r\n            {emails.map(email => (\r\n              <ListItem\r\n                button\r\n                onClick={() => this.handleListItemClick(email)}\r\n                key={email}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <PersonIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={email} />\r\n              </ListItem>\r\n            ))}\r\n            <ListItem\r\n              button\r\n              onClick={() => this.handleListItemClick(\"addAccount\")}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <AddIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"add account\" />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nclass SimpleDialogDemo extends React.Component {\r\n  state = {\r\n    open: false,\r\n    selectedValue: emails[1]\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  };\r\n\r\n  handleClose = value => {\r\n    this.setState({ selectedValue: value, open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Simple Dialogs\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Simple dialogs can provide additional details or actions about a\r\n            list item.\r\n          </Typography>\r\n\r\n          <Paper mt={4}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.handleClickOpen}\r\n            >\r\n              Open simple dialog\r\n            </Button>\r\n            <SimpleDialog\r\n              selectedValue={this.state.selectedValue}\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n            />\r\n            <Paper mt={2}>\r\n              <Typography variant=\"body2\">\r\n                Selected: {this.state.selectedValue}\r\n              </Typography>\r\n            </Paper>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass AlertDialog extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Alerts\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Alerts are urgent interruptions, requiring acknowledgement, that\r\n            inform the user about a situation.\r\n          </Typography>\r\n\r\n          <Paper mt={4}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.handleClickOpen}\r\n            >\r\n              Open alert dialog\r\n            </Button>\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Use Google's location service?\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Let Google help apps determine location. This means sending\r\n                  anonymous location data to Google, even when no apps are\r\n                  running.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={this.handleClose} color=\"primary\">\r\n                  Disagree\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                  Agree\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass MaxWidthDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n    fullWidth: true,\r\n    maxWidth: \"sm\"\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleMaxWidthChange = event => {\r\n    this.setState({ maxWidth: event.target.value });\r\n  };\r\n\r\n  handleFullWidthChange = event => {\r\n    this.setState({ fullWidth: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Simple Dialogs\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Simple dialogs can provide additional details or actions about a\r\n            list item.\r\n          </Typography>\r\n\r\n          <Paper mt={4}>\r\n            <React.Fragment>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleClickOpen}\r\n              >\r\n                Open max-width dialog\r\n              </Button>\r\n              <Dialog\r\n                fullWidth={this.state.fullWidth}\r\n                maxWidth={this.state.maxWidth}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"max-width-dialog-title\">\r\n                  Optional sizes\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    You can set my maximum width and whether to adapt or not.\r\n                  </DialogContentText>\r\n                  <form noValidate>\r\n                    <FormControl>\r\n                      <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n                      <Select\r\n                        value={this.state.maxWidth}\r\n                        onChange={this.handleMaxWidthChange}\r\n                        inputProps={{\r\n                          name: \"max-width\",\r\n                          id: \"max-width\"\r\n                        }}\r\n                      >\r\n                        <MenuItem value={false}>false</MenuItem>\r\n                        <MenuItem value=\"xs\">xs</MenuItem>\r\n                        <MenuItem value=\"sm\">sm</MenuItem>\r\n                        <MenuItem value=\"md\">md</MenuItem>\r\n                        <MenuItem value=\"lg\">lg</MenuItem>\r\n                        <MenuItem value=\"xl\">xl</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </form>\r\n                  <form>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={this.state.fullWidth}\r\n                          onChange={this.handleFullWidthChange}\r\n                          value=\"fullWidth\"\r\n                        />\r\n                      }\r\n                      label=\"Full width\"\r\n                    />\r\n                  </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={this.handleClose} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </React.Fragment>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass FormDialog extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Form Dialogs\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Form dialogs allow users to fill out form fields within a dialog.\r\n          </Typography>\r\n\r\n          <Paper mt={4}>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleClickOpen}\r\n              >\r\n                Open form dialog\r\n              </Button>\r\n              <Dialog\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    To subscribe to this website, please enter your email\r\n                    address here. We will send updates occasionally.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={this.handleClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={this.handleClose} color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Dialogs() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Dialogs\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Dialogs\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Dialogs</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleDialogDemo />\r\n          <AlertDialog />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <MaxWidthDialog />\r\n          <FormDialog />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Dialogs;\r\n"]},"metadata":{},"sourceType":"module"}