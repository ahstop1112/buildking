{"ast":null,"code":"import React from\"react\";import styled from\"styled-components\";import{NavLink as RouterNavLink}from\"react-router-dom\";import{Helmet}from'react-helmet';import{Box,Breadcrumbs as MuiBreadcrumbs,Divider as MuiDivider,Grid,Link,Typography as MuiTypography}from\"@material-ui/core\";import{spacing}from\"@material-ui/system\";import Code from\"../../components/Code\";var NavLink=React.forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(RouterNavLink,Object.assign({innerRef:ref},props));});var Divider=styled(MuiDivider)(spacing);var Breadcrumbs=styled(MuiBreadcrumbs)(spacing);var Typography=styled(MuiTypography)(spacing);function Introduction(){return/*#__PURE__*/React.createElement(Box,{mb:10},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",gutterBottom:true},\"Introduction\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},/*#__PURE__*/React.createElement(\"code\",null,\"npm run build\"),\" creates a build directory with a production build of your app. Set up your favorite HTTP server so that a visitor to your site is served index.html, and requests to static paths like \",/*#__PURE__*/React.createElement(\"code\",null,\"/static/js/main.<hash>.js\"),\" are served with the contents of the \",/*#__PURE__*/React.createElement(\"code\",null,\"/static/js/main.<hash>.js\"),\" file.\"));}function StaticServer(){return/*#__PURE__*/React.createElement(Box,{mb:10},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",gutterBottom:true},\"Static Server\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},\"For environments using \",/*#__PURE__*/React.createElement(Link,{href:\"https://nodejs.org/en/\",target:\"_blank\",rel:\"noreferrer noopener\"},\"Node\"),\", the easiest way to handle this would be to install \",/*#__PURE__*/React.createElement(Link,{href:\"https://github.com/zeit/serve\",target:\"_blank\",rel:\"noreferrer noopener\"},\"serve\"),\" and let it handle the rest:\",/*#__PURE__*/React.createElement(Code,null,\"npm install -g serve\\nserve -s build\")),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},\"The last command shown above will serve your static site on the port 5000. Like many of \",/*#__PURE__*/React.createElement(Link,{href:\"https://github.com/vercel/serve\",target:\"_blank\",rel:\"noreferrer noopener\"},\"serve\"),\"\\u2019s internal settings, the port can be adjusted using the \",/*#__PURE__*/React.createElement(\"code\",null,\"-l\"),\" or \",/*#__PURE__*/React.createElement(\"code\",null,\"--listen\"),\" flags:\",/*#__PURE__*/React.createElement(Code,null,\"serve -s build -l 4000\")),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},\"Run this command to get a full list of the options available:\",/*#__PURE__*/React.createElement(Code,null,\"serve -h\")));}function OtherSolutions(){return/*#__PURE__*/React.createElement(Box,{mb:10},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",gutterBottom:true},\"Other Solutions\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},\"You don\\u2019t necessarily need a static server in order to run a Create React App project in production. It also works well when integrated into an existing server side app.\"));}function Express(){return/*#__PURE__*/React.createElement(Box,{mb:10},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\",gutterBottom:true},\"Express\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},\"Express is a fast, unopinionated, minimalist web framework for Node.js. Here\\u2019s a programmatic example:\",/*#__PURE__*/React.createElement(Code,null,\"const express = require('express');\\nconst path = require('path');\\nconst app = express();\\napp.use(express.static(path.join(__dirname, 'build')));\\napp.get('/', function(req, res) {\\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\\n});\\napp.listen(9000);\")));}function Netlify(){return/*#__PURE__*/React.createElement(Box,{mb:10},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\",gutterBottom:true},\"Netlify\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},\"Deploy modern static websites with Netlify. Get CDN, Continuous deployment, 1-click HTTPS, and all the services you need.\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},\"To do a manual deploy to Netlify\\u2019s CDN:\",/*#__PURE__*/React.createElement(Code,null,\"npm install netlify-cli -g\\nnetlify deploy\"),\"Choose \",/*#__PURE__*/React.createElement(\"code\",null,\"build\"),\" as the path to deploy.\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,my:4},\"To setup continuous delivery:\",/*#__PURE__*/React.createElement(\"br\",null),\"With this setup Netlify will build and deploy when you push to git or open a pull request:\",/*#__PURE__*/React.createElement(\"ol\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(Link,{href:\"https://app.netlify.com/signup\",target:\"_blank\",rel:\"noreferrer noopener\"},\"Start a new netlify project\")),/*#__PURE__*/React.createElement(\"li\",null,\"Pick your Git hosting service and select your repository\"),/*#__PURE__*/React.createElement(\"li\",null,\"Click \",/*#__PURE__*/React.createElement(\"code\",null,\"Build your site\")))));}function Deployment(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,{title:\"Deployment\"}),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:6,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,lg:9,xl:7},/*#__PURE__*/React.createElement(Typography,{variant:\"h2\",gutterBottom:true,display:\"inline\"},\"Deployment\"),/*#__PURE__*/React.createElement(Breadcrumbs,{\"aria-label\":\"Breadcrumb\",mt:2},/*#__PURE__*/React.createElement(Link,{component:NavLink,exact:true,to:\"/\"},\"Dashboard\"),/*#__PURE__*/React.createElement(Link,{component:NavLink,exact:true,to:\"/documentation/welcome\"},\"Documentation\"),/*#__PURE__*/React.createElement(Typography,null,\"Deployment\")),/*#__PURE__*/React.createElement(Divider,{my:6}),/*#__PURE__*/React.createElement(Introduction,null),/*#__PURE__*/React.createElement(StaticServer,null),/*#__PURE__*/React.createElement(OtherSolutions,null),/*#__PURE__*/React.createElement(Express,null),/*#__PURE__*/React.createElement(Netlify,null))));}export default Deployment;","map":{"version":3,"sources":["/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/docs/Deployment.js"],"names":["React","styled","NavLink","RouterNavLink","Helmet","Box","Breadcrumbs","MuiBreadcrumbs","Divider","MuiDivider","Grid","Link","Typography","MuiTypography","spacing","Code","forwardRef","props","ref","Introduction","StaticServer","OtherSolutions","Express","Netlify","Deployment"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport {\r\n  Box,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Divider as MuiDivider,\r\n  Grid,\r\n  Link,\r\n  Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction Introduction() {\r\n  return (\r\n    <Box mb={10}>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        Introduction\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        <code>npm run build</code> creates a build directory with a production build of your app. Set up your favorite HTTP server so that a visitor to your site is served index.html, and requests to static paths like <code>{`/static/js/main.<hash>.js`}</code> are served with the contents of the <code>{`/static/js/main.<hash>.js`}</code> file.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction StaticServer() {\r\n  return (\r\n    <Box mb={10}>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        Static Server\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        For environments using <Link href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noreferrer noopener\">Node</Link>, the easiest way to handle this would be to install <Link href=\"https://github.com/zeit/serve\" target=\"_blank\" rel=\"noreferrer noopener\">serve</Link> and let it handle the rest:\r\n\r\n        <Code>{`npm install -g serve\r\nserve -s build`}</Code>\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        The last command shown above will serve your static site on the port 5000. Like many of <Link href=\"https://github.com/vercel/serve\" target=\"_blank\" rel=\"noreferrer noopener\">serve</Link>’s internal settings, the port can be adjusted using the <code>-l</code> or <code>--listen</code> flags:\r\n\r\n        <Code>serve -s build -l 4000</Code>\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        Run this command to get a full list of the options available:\r\n\r\n        <Code>serve -h</Code>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction OtherSolutions() {\r\n  return (\r\n    <Box mb={10}>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        Other Solutions\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        You don’t necessarily need a static server in order to run a Create React App project in production. It also works well when integrated into an existing server side app.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction Express() {\r\n  return (\r\n    <Box mb={10}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Express\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        Express is a fast, unopinionated, minimalist web framework for Node.js. Here’s a programmatic example:\r\n\r\n        <Code>{`const express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\napp.use(express.static(path.join(__dirname, 'build')));\r\napp.get('/', function(req, res) {\r\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\r\n});\r\napp.listen(9000);`}</Code>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction Netlify() {\r\n  return (\r\n    <Box mb={10}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Netlify\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        Deploy modern static websites with Netlify. Get CDN, Continuous deployment, 1-click HTTPS, and all the services you need.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        To do a manual deploy to Netlify’s CDN:\r\n\r\n        <Code>{`npm install netlify-cli -g\r\nnetlify deploy`}</Code>\r\n\r\n        Choose <code>build</code> as the path to deploy.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        To setup continuous delivery:<br />\r\n\r\n        With this setup Netlify will build and deploy when you push to git or open a pull request:\r\n        <ol>\r\n          <li><Link href=\"https://app.netlify.com/signup\" target=\"_blank\" rel=\"noreferrer noopener\">Start a new netlify project</Link></li>\r\n          <li>Pick your Git hosting service and select your repository</li>\r\n          <li>Click <code>Build your site</code></li>\r\n        </ol>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction Deployment() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Deployment\" />\r\n\r\n      <Grid container spacing={6} justify=\"center\">\r\n        <Grid item xs={12} lg={9} xl={7}>\r\n          <Typography variant=\"h2\" gutterBottom display=\"inline\">\r\n            Deployment\r\n          </Typography>\r\n\r\n          <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n            <Link component={NavLink} exact to=\"/\">\r\n              Dashboard\r\n            </Link>\r\n            <Link component={NavLink} exact to=\"/documentation/welcome\">\r\n              Documentation\r\n            </Link>\r\n            <Typography>Deployment</Typography>\r\n          </Breadcrumbs>\r\n\r\n          <Divider my={6} />\r\n\r\n          <Introduction />\r\n          <StaticServer />\r\n          <OtherSolutions />\r\n          <Express />\r\n          <Netlify />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Deployment;\r\n"]},"metadata":{},"sourceType":"module"}