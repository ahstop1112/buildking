{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/docs/Theming.js\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { Helmet } from 'react-helmet';\nimport { Box, Breadcrumbs as MuiBreadcrumbs, Divider as MuiDivider, Grid, Link, Typography as MuiTypography } from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\nimport Code from \"../../components/Code\";\nvar NavLink = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(RouterNavLink, Object.assign({\n    innerRef: ref\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }));\n});\nvar Divider = styled(MuiDivider)(spacing);\nvar Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\nvar Typography = styled(MuiTypography)(spacing);\n\nfunction Introduction() {\n  return /*#__PURE__*/React.createElement(Box, {\n    mb: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Introduction\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"This theme uses Material-UI in combination with Styled-Components. On this page we try to cover the basics on how to adjust the color palette and other styles.\"));\n}\n\nfunction HowItWorks() {\n  return /*#__PURE__*/React.createElement(Box, {\n    mb: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"How it works\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Material-UI's \", /*#__PURE__*/React.createElement(Link, {\n    href: \"https://material-ui.com/customization/theming/#createmuitheme-options-args-theme\",\n    target: \"_blank\",\n    rel: \"noreferrer noopener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }\n  }, \"createMuiTheme\"), \" is used to extend Material-UI's default styling. Material App is using both the Material-UI ThemeProvider as Styled-Components ThemeProvider. This way, global theme variables will be applied to both Material-UI's components as custom Styled-Components.\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"How to access theme variables from a component:\", /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"const CustomComponent = styled.div`\\n  background: ${props => props.theme.palette.primary.main};\\n  color: ${props => props.theme.palette.common.white};\\n  padding: ${props => props.theme.spacing(2)}px;\\n`;\\n\\nconst Custom = ({children}) => (\\n  <CustomComponent>\\n    {children}\\n  </CustomComponent>\\n);\")));\n}\n\nfunction AdjustingTheme() {\n  return /*#__PURE__*/React.createElement(Box, {\n    mb: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Adjusting theme variables\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"In the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }\n  }, \"/theme\"), \" folder you can find all the theme variables. They are categorized by palettes, shadows, typography, overrides and theme variants. You are able to control each on them inndividually. Typography example:\", /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"const typography = {\\n  h1: {\\n    fontSize: \\\"2rem\\\",\\n    fontWeight: 600,\\n    lineHeight: 1.2\\n  },\\n  h2: {\\n    fontSize: \\\"1.75rem\\\",\\n    fontWeight: 600,\\n    lineHeight: 1.2\\n  },\\n  h3: {\\n    fontSize: \\\"1.5rem\\\",\\n    fontWeight: 600,\\n    lineHeight: 1.2\\n  },\\n  //etc\\n};\")));\n}\n\nfunction Theming() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    title: \"Theming\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 9,\n    xl: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    gutterBottom: true,\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Theming\"), /*#__PURE__*/React.createElement(Breadcrumbs, {\n    \"aria-label\": \"Breadcrumb\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    component: NavLink,\n    exact: true,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(Link, {\n    component: NavLink,\n    exact: true,\n    to: \"/documentation/welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Documentation\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Theming\")), /*#__PURE__*/React.createElement(Divider, {\n    my: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Introduction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HowItWorks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AdjustingTheme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Theming;","map":{"version":3,"sources":["/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/docs/Theming.js"],"names":["React","styled","NavLink","RouterNavLink","Helmet","Box","Breadcrumbs","MuiBreadcrumbs","Divider","MuiDivider","Grid","Link","Typography","MuiTypography","spacing","Code","forwardRef","props","ref","Introduction","HowItWorks","AdjustingTheme","Theming"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport {\r\n  Box,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Divider as MuiDivider,\r\n  Grid,\r\n  Link,\r\n  Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction Introduction() {\r\n  return (\r\n    <Box mb={10}>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        Introduction\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        This theme uses Material-UI in combination with Styled-Components. On this page we try to cover the basics on how to adjust the color palette and other styles.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction HowItWorks() {\r\n  return (\r\n    <Box mb={10}>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        How it works\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        Material-UI's <Link href=\"https://material-ui.com/customization/theming/#createmuitheme-options-args-theme\" target=\"_blank\" rel=\"noreferrer noopener\">createMuiTheme</Link> is used to extend Material-UI's default styling. Material App is using both the Material-UI ThemeProvider as Styled-Components ThemeProvider. This way, global theme variables will be applied to both Material-UI's components as custom Styled-Components.</Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        How to access theme variables from a component:\r\n\r\n        <Code>{`const CustomComponent = styled.div\\`\r\n  background: \\${props => props.theme.palette.primary.main};\r\n  color: \\${props => props.theme.palette.common.white};\r\n  padding: \\${props => props.theme.spacing(2)}px;\r\n\\`;\r\n\r\nconst Custom = ({children}) => (\r\n  <CustomComponent>\r\n    {children}\r\n  </CustomComponent>\r\n);`}</Code>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction AdjustingTheme() {\r\n  return (\r\n    <Box mb={10}>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        Adjusting theme variables\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\r\n        In the <code>/theme</code> folder you can find all the theme variables. They are categorized by palettes, shadows, typography, overrides and theme variants. You are able to control each on them inndividually. Typography example:\r\n\r\n        <Code>{`const typography = {\r\n  h1: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: 600,\r\n    lineHeight: 1.2\r\n  },\r\n  h2: {\r\n    fontSize: \"1.75rem\",\r\n    fontWeight: 600,\r\n    lineHeight: 1.2\r\n  },\r\n  h3: {\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: 600,\r\n    lineHeight: 1.2\r\n  },\r\n  //etc\r\n};`}</Code>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction Theming() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Theming\" />\r\n\r\n      <Grid container spacing={6} justify=\"center\">\r\n        <Grid item xs={12} lg={9} xl={7}>\r\n          <Typography variant=\"h2\" gutterBottom display=\"inline\">\r\n            Theming\r\n          </Typography>\r\n\r\n          <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n            <Link component={NavLink} exact to=\"/\">\r\n              Dashboard\r\n            </Link>\r\n            <Link component={NavLink} exact to=\"/documentation/welcome\">\r\n              Documentation\r\n            </Link>\r\n            <Typography>Theming</Typography>\r\n          </Breadcrumbs>\r\n\r\n          <Divider my={6} />\r\n\r\n          <Introduction />\r\n          <HowItWorks />\r\n          <AdjustingTheme />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Theming;\r\n"]},"metadata":{},"sourceType":"module"}