{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  width: 60px;\\n  height: 60px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  margin-right: \",\"px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import{NavLink as RouterNavLink}from\"react-router-dom\";import Helmet from'react-helmet';import{CardContent,Grid,Link,Avatar as MuiAvatar,Breadcrumbs as MuiBreadcrumbs,Card as MuiCard,Divider as MuiDivider,Typography}from\"@material-ui/core\";import{deepOrange,deepPurple,green,pink}from\"@material-ui/core/colors\";import{Assignment as AssignmentIcon,Folder as FolderIcon,Pageview as PageviewIcon}from\"@material-ui/icons\";import{spacing}from\"@material-ui/system\";var NavLink=React.forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(RouterNavLink,Object.assign({innerRef:ref},props));});var Card=styled(MuiCard)(spacing);var Avatar=styled(MuiAvatar)(_templateObject(),function(props){return props.theme.spacing(2);});var BigAvatar=styled(Avatar)(_templateObject2());var PinkAvatar=styled(Avatar)(_templateObject3(),pink[500]);var GreenAvatar=styled(Avatar)(_templateObject4(),green[500]);var OrangeAvatar=styled(Avatar)(_templateObject5(),deepOrange[500]);var PurpleAvatar=styled(Avatar)(_templateObject6(),deepPurple[500]);var Divider=styled(MuiDivider)(spacing);var Breadcrumbs=styled(MuiBreadcrumbs)(spacing);function ImageAvatars(){return/*#__PURE__*/React.createElement(Card,{mb:6},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",gutterBottom:true},\"Image Avatars\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",gutterBottom:true},\"Image avatars can be created by passing standard img props src or srcSet into the component.\"),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Avatar,{alt:\"Remy Sharp\",src:\"/static/img/avatars/avatar-1.jpg\"}),/*#__PURE__*/React.createElement(BigAvatar,{alt:\"Remy Sharp\",src:\"/static/img/avatars/avatar-1.jpg\"}))));}function LetterAvatars(){return/*#__PURE__*/React.createElement(Card,{mb:6},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",gutterBottom:true},\"Letter avatars\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",gutterBottom:true},\"Avatars containing simple characters can be created by passing your string as children.\"),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Avatar,null,\"H\"),/*#__PURE__*/React.createElement(OrangeAvatar,null,\"N\"),/*#__PURE__*/React.createElement(PurpleAvatar,null,\"OP\"))));}function IconAvatars(){return/*#__PURE__*/React.createElement(Card,{mb:6},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",gutterBottom:true},\"Icon avatars\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",gutterBottom:true},\"Icon avatars are created by passing an icon as children.\"),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Avatar,null,/*#__PURE__*/React.createElement(FolderIcon,null)),/*#__PURE__*/React.createElement(PinkAvatar,null,/*#__PURE__*/React.createElement(PageviewIcon,null)),/*#__PURE__*/React.createElement(GreenAvatar,null,/*#__PURE__*/React.createElement(AssignmentIcon,null)))));}function Avatars(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,{title:\"Avatars\"}),/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",gutterBottom:true,display:\"inline\"},\"Avatars\"),/*#__PURE__*/React.createElement(Breadcrumbs,{\"aria-label\":\"Breadcrumb\",mt:2},/*#__PURE__*/React.createElement(Link,{component:NavLink,exact:true,to:\"/\"},\"Dashboard\"),/*#__PURE__*/React.createElement(Link,{component:NavLink,exact:true,to:\"/\"},\"Components\"),/*#__PURE__*/React.createElement(Typography,null,\"Avatars\")),/*#__PURE__*/React.createElement(Divider,{my:6}),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:6},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:6},/*#__PURE__*/React.createElement(ImageAvatars,null),/*#__PURE__*/React.createElement(LetterAvatars,null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:6},/*#__PURE__*/React.createElement(IconAvatars,null))));}export default Avatars;","map":{"version":3,"sources":["/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/components/Avatars.js"],"names":["React","styled","NavLink","RouterNavLink","Helmet","CardContent","Grid","Link","Avatar","MuiAvatar","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","Divider","MuiDivider","Typography","deepOrange","deepPurple","green","pink","Assignment","AssignmentIcon","Folder","FolderIcon","Pageview","PageviewIcon","spacing","forwardRef","props","ref","theme","BigAvatar","PinkAvatar","GreenAvatar","OrangeAvatar","PurpleAvatar","ImageAvatars","LetterAvatars","IconAvatars","Avatars"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  CardContent,\r\n  Grid,\r\n  Link,\r\n  Avatar as MuiAvatar,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { deepOrange, deepPurple, green, pink } from \"@material-ui/core/colors\";\r\n\r\nimport {\r\n  Assignment as AssignmentIcon,\r\n  Folder as FolderIcon,\r\n  Pageview as PageviewIcon\r\n} from \"@material-ui/icons\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Avatar = styled(MuiAvatar)`\r\n  margin-right: ${props => props.theme.spacing(2)}px;\r\n`;\r\n\r\nconst BigAvatar = styled(Avatar)`\r\n  width: 60px;\r\n  height: 60px;\r\n`;\r\n\r\nconst PinkAvatar = styled(Avatar)`\r\n  background-color: ${pink[500]};\r\n`;\r\n\r\nconst GreenAvatar = styled(Avatar)`\r\n  background-color: ${green[500]};\r\n`;\r\n\r\nconst OrangeAvatar = styled(Avatar)`\r\n  background-color: ${deepOrange[500]};\r\n`;\r\n\r\nconst PurpleAvatar = styled(Avatar)`\r\n  background-color: ${deepPurple[500]};\r\n`;\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nfunction ImageAvatars() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Image Avatars\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Image avatars can be created by passing standard img props src or\r\n          srcSet into the component.\r\n        </Typography>\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/img/avatars/avatar-1.jpg\" />\r\n          <BigAvatar alt=\"Remy Sharp\" src=\"/static/img/avatars/avatar-1.jpg\" />\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction LetterAvatars() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Letter avatars\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Avatars containing simple characters can be created by passing your\r\n          string as children.\r\n        </Typography>\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Avatar>H</Avatar>\r\n          <OrangeAvatar>N</OrangeAvatar>\r\n          <PurpleAvatar>OP</PurpleAvatar>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction IconAvatars() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Icon avatars\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Icon avatars are created by passing an icon as children.\r\n        </Typography>\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Avatar>\r\n            <FolderIcon />\r\n          </Avatar>\r\n          <PinkAvatar>\r\n            <PageviewIcon />\r\n          </PinkAvatar>\r\n          <GreenAvatar>\r\n            <AssignmentIcon />\r\n          </GreenAvatar>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Avatars() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Avatars\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Avatars\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Avatars</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <ImageAvatars />\r\n          <LetterAvatars />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <IconAvatars />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Avatars;\r\n"]},"metadata":{},"sourceType":"module"}