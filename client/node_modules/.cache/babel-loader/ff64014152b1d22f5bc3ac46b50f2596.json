{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  &:nth-of-type(odd) {\\n    background-color: rgba(0, 0, 0, 0.025);\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import{NavLink as RouterNavLink}from\"react-router-dom\";import Helmet from'react-helmet';import{Grid,Link,Breadcrumbs as MuiBreadcrumbs,Card as MuiCard,CardContent as MuiCardContent,Divider as MuiDivider,Paper as MuiPaper,Table,TableBody,TableCell,TableHead,TableRow,Typography}from\"@material-ui/core\";import{spacing}from\"@material-ui/system\";import{withStyles}from\"@material-ui/core/styles\";var NavLink=React.forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(RouterNavLink,Object.assign({innerRef:ref},props));});var Card=styled(MuiCard)(spacing);var CardContent=styled(MuiCardContent)(spacing);var Divider=styled(MuiDivider)(spacing);var Breadcrumbs=styled(MuiBreadcrumbs)(spacing);var Paper=styled(MuiPaper)(spacing);var CustomTableCell=withStyles(function(theme){return{head:{backgroundColor:theme.palette.common.black,color:theme.palette.common.white},body:{fontSize:14}};})(TableCell);var CustomTableRow=styled(TableRow)(_templateObject());// Data\nvar id=0;function createData(name,calories,fat,carbs,protein){id+=1;return{id:id,name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var rows=[createData(\"Frozen yoghurt\",159,6.0,24,4.0),createData(\"Ice cream sandwich\",237,9.0,37,4.3),createData(\"Eclair\",262,16.0,24,6.0),createData(\"Cupcake\",305,3.7,67,4.3),createData(\"Gingerbread\",356,16.0,49,3.9)];function SimpleTableDemo(){return/*#__PURE__*/React.createElement(Card,{mb:6},/*#__PURE__*/React.createElement(CardContent,{pb:1},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",gutterBottom:true},\"Simple Table\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",gutterBottom:true},\"A simple example with no frills.\")),/*#__PURE__*/React.createElement(Paper,null,/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Dessert (100g serving)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Calories\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Fat (g)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Carbs (g)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Protein (g)\"))),/*#__PURE__*/React.createElement(TableBody,null,rows.map(function(row){return/*#__PURE__*/React.createElement(TableRow,{key:row.id},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},row.name),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.calories),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.fat),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.carbs),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.protein));})))));}function CustomizedTableDemo(){return/*#__PURE__*/React.createElement(Card,{mb:6},/*#__PURE__*/React.createElement(CardContent,{pb:1},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",gutterBottom:true},\"Customized Table\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",gutterBottom:true},\"If you have been reading the overrides documentation page but you are not confident jumping in, here are examples of how you can change the look of a \",/*#__PURE__*/React.createElement(\"code\",null,\"TableCell\"),\".\")),/*#__PURE__*/React.createElement(Paper,null,/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(CustomTableCell,null,\"Dessert (100g serving)\"),/*#__PURE__*/React.createElement(CustomTableCell,{align:\"right\"},\"Calories\"),/*#__PURE__*/React.createElement(CustomTableCell,{align:\"right\"},\"Fat (g)\"),/*#__PURE__*/React.createElement(CustomTableCell,{align:\"right\"},\"Carbs (g)\"),/*#__PURE__*/React.createElement(CustomTableCell,{align:\"right\"},\"Protein (g)\"))),/*#__PURE__*/React.createElement(TableBody,null,rows.map(function(row){return/*#__PURE__*/React.createElement(CustomTableRow,{key:row.id},/*#__PURE__*/React.createElement(CustomTableCell,{component:\"th\",scope:\"row\"},row.name),/*#__PURE__*/React.createElement(CustomTableCell,{align:\"right\"},row.calories),/*#__PURE__*/React.createElement(CustomTableCell,{align:\"right\"},row.fat),/*#__PURE__*/React.createElement(CustomTableCell,{align:\"right\"},row.carbs),/*#__PURE__*/React.createElement(CustomTableCell,{align:\"right\"},row.protein));})))));}function SimpleTable(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,{title:\"Simple Table\"}),/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",gutterBottom:true,display:\"inline\"},\"Simple Table\"),/*#__PURE__*/React.createElement(Breadcrumbs,{\"aria-label\":\"Breadcrumb\",mt:2},/*#__PURE__*/React.createElement(Link,{component:NavLink,exact:true,to:\"/\"},\"Dashboard\"),/*#__PURE__*/React.createElement(Link,{component:NavLink,exact:true,to:\"/\"},\"Tables\"),/*#__PURE__*/React.createElement(Typography,null,\"Simple Table\")),/*#__PURE__*/React.createElement(Divider,{my:6}),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:6},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(SimpleTableDemo,null),/*#__PURE__*/React.createElement(CustomizedTableDemo,null))));}export default SimpleTable;","map":{"version":3,"sources":["/Users/perrycheung/Documents/PROJECT/HKLTTI/buildking/client/src/pages/tables/SimpleTable.js"],"names":["React","styled","NavLink","RouterNavLink","Helmet","Grid","Link","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","CardContent","MuiCardContent","Divider","MuiDivider","Paper","MuiPaper","Table","TableBody","TableCell","TableHead","TableRow","Typography","spacing","withStyles","forwardRef","props","ref","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","CustomTableRow","id","createData","name","calories","fat","carbs","protein","rows","SimpleTableDemo","map","row","CustomizedTableDemo","SimpleTable"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  Divider as MuiDivider,\r\n  Paper as MuiPaper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst CardContent = styled(MuiCardContent)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst CustomTableRow = styled(TableRow)`\r\n  &:nth-of-type(odd) {\r\n    background-color: rgba(0, 0, 0, 0.025);\r\n  }\r\n`;\r\n\r\n// Data\r\nlet id = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\nfunction SimpleTableDemo() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent pb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Simple Table\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          A simple example with no frills.\r\n        </Typography>\r\n      </CardContent>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat (g)</TableCell>\r\n              <TableCell align=\"right\">Carbs (g)</TableCell>\r\n              <TableCell align=\"right\">Protein (g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction CustomizedTableDemo() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent pb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Customized Table\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          If you have been reading the overrides documentation page but you are\r\n          not confident jumping in, here are examples of how you can change the\r\n          look of a <code>TableCell</code>.\r\n        </Typography>\r\n      </CardContent>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <CustomTableCell>Dessert (100g serving)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Calories</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Fat (g)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Carbs (g)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Protein (g)</CustomTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <CustomTableRow key={row.id}>\r\n                <CustomTableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.calories}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.fat}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.carbs}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.protein}</CustomTableCell>\r\n              </CustomTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction SimpleTable() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Simple Table\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Simple Table\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Tables\r\n        </Link>\r\n        <Typography>Simple Table</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <SimpleTableDemo />\r\n          <CustomizedTableDemo />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SimpleTable;\r\n"]},"metadata":{},"sourceType":"module"}