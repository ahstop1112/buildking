(this["webpackJsonpmaterial-app"]=this["webpackJsonpmaterial-app"]||[]).push([[63],{2490:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),o=a(7),c=a(81),l=a(119),i=a(593),s=a(592),u=a(87),m=a(582),d=a(591),p=a(565),h=a(511),b=a(606),E=r.a.forwardRef((function(e,t){return r.a.createElement(c.c,Object.assign({innerRef:t},e))})),g=Object(o.d)(i.a)(h.b),f=Object(o.d)(s.a)(h.b),y=Object(o.d)(u.a)(h.b);function v(){return r.a.createElement(m.a,{mb:10},r.a.createElement(y,{variant:"h3",gutterBottom:!0},"Context API"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"Context provides a way to pass data through the component tree without having to pass props down manually at every level.",r.a.createElement("br",null),r.a.createElement("br",null),"In a typical React application, data is passed top-down (parent to child) via props, but this can be cumbersome for certain types of props (e.g. locale preference, UI theme) that are required by many components within an application. Context provides a way to share values like these between components without having to explicitly pass a prop through every level of the tree. ",r.a.createElement(d.a,{href:"https://reactjs.org/docs/context.html",target:"_blank",rel:"noreferrer noopener"},"Learn more"),"."))}function x(){return r.a.createElement(m.a,{mb:10},r.a.createElement(y,{variant:"h3",gutterBottom:!0},"Redux"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"Redux is a predictable state container for JavaScript apps.",r.a.createElement("br",null),r.a.createElement("br",null),"It helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test. On top of that, it provides a great developer experience, such as ",r.a.createElement(d.a,{href:"https://github.com/reduxjs/redux-devtools",target:"_blank",rel:"noreferrer noopener"},"live code editing combined with a time traveling debugger"),".",r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement(d.a,{href:"https://redux.js.org/introduction/getting-started",target:"_blank",rel:"noreferrer noopener"},"Learn more about Redux \xbb")))}function w(){return r.a.createElement(m.a,{mb:10},r.a.createElement(y,{variant:"h4",gutterBottom:!0},"Actions"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"Actions are payloads of information that send data from your application to your store. They are the only source of information for the store. Here's an example action which represents adding a new todo item:"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},r.a.createElement("code",null,"redux/constants.js")," (or ",r.a.createElement("code",null,"redux/constants.ts"),")",r.a.createElement(b.a,null,"const ADD_TODO = 'ADD_TODO'")),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},r.a.createElement("code",null,"redux/actions/todoActions.js")," (or ",r.a.createElement("code",null,"redux/actions/todoActions.ts"),")",r.a.createElement(b.a,null,"import * as types from '../constants';\n\nexport function addTodo(value) {\n  return {\n    type: types.ADD_TODO,\n    payload: value\n  }\n}")),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"How to dispatch an action:",r.a.createElement(b.a,null,"import { useDispatch } from 'react-redux';\nimport { addTodo } from '../redux/actions/todoActions';\n\nconst DemoComponent = function() {\n  const dispatch = useDispatch();\n\n  return (\n    <Button onClick={() => dispatch(addTodo('My first todo item'))}>Click me!</Button>\n  )\n}")))}function B(){return r.a.createElement(m.a,{mb:10},r.a.createElement(y,{variant:"h4",gutterBottom:!0},"Reducers"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"Reducers specify how the application's state changes in response to actions sent to the store. Remember that actions only describe what happened, but don't describe how the application's state changes."),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},r.a.createElement("code",null,"redux/reducers/todoReducer.js")," (or ",r.a.createElement("code",null,"redux/reducers/todoReducer.ts"),")",r.a.createElement(b.a,null,"import * as types from '../constants';\n\nconst initialState = [\n  {\n    text: \"Initial todo item\",\n    completed: true\n  }\n]\n\nexport default function reducer(state = initialState, actions) {\n  switch (actions.type) {\n\n    case types.ADD_TODO:\n      return [\n        ...state,\n        {\n          text: actions.payload,\n          completed: false\n        }\n      ]\n\n    default:\n      return state\n  }\n}"),"Note: Reducers can be registered by adding them to the array in the ",r.a.createElement("code",null,"redux/reducers/index.js")," (or ",r.a.createElement("code",null,"redux/reducers/index.ts"),") file."))}function D(){return r.a.createElement(m.a,{mb:10},r.a.createElement(y,{variant:"h4",gutterBottom:!0},"Store"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"In the previous sections, we defined the actions that represent the facts about \u201cwhat happened\u201d and the reducers that update the state according to those actions. The Store is the object that brings them together.",r.a.createElement("br",null),r.a.createElement("br",null),"It's important to note that you'll only have a single store in a Redux application. When you want to split your data handling logic, you'll use ",r.a.createElement(d.a,{href:"https://redux.js.org/basics/reducers#splitting-reducers",target:"_blank",rel:"noreferrer noopener"},"reducer composition")," instead of many stores."),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"Demo component showing values from the store:",r.a.createElement(b.a,null,"import { connect } from 'react-redux';\n\nconst DemoComponent = ({ todos }) => (\n  <ul>\n    { todos.map((todo) => <li>{todo}</li>) }\n  </ul>\n)\n\nexport default connect(store => ({ todos: store.todoReducer }))(DemoComponent);")))}t.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.Helmet,{title:"State Management"}),r.a.createElement(p.a,{container:!0,spacing:6,justify:"center"},r.a.createElement(p.a,{item:!0,xs:12,lg:9,xl:7},r.a.createElement(y,{variant:"h2",gutterBottom:!0,display:"inline"},"State Management"),r.a.createElement(f,{"aria-label":"Breadcrumb",mt:2},r.a.createElement(d.a,{component:E,exact:!0,to:"/"},"Dashboard"),r.a.createElement(d.a,{component:E,exact:!0,to:"/documentation/welcome"},"Documentation"),r.a.createElement(y,null,"State Management")),r.a.createElement(g,{my:6}),r.a.createElement(v,null),r.a.createElement(x,null),r.a.createElement(w,null),r.a.createElement(B,null),r.a.createElement(D,null))))}},606:function(e,t,a){"use strict";var n=a(9),r=a(0),o=a.n(r),c=a(7),l=a(2504),i=a(2486);function s(){var e=Object(n.a)(["\n  border-radius: 3px;\n  padding: ","px !important;\n  background-color: #1B2430 !important;\n"]);return s=function(){return e},e}var u=Object(c.d)(l.a)(s(),(function(e){return e.theme.spacing(3)}));t.a=function(e){var t=e.children;return o.a.createElement(u,{language:"javascript",style:i.a},t)}}}]);
//# sourceMappingURL=63.f9f8270e.chunk.js.map