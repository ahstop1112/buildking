{"version":3,"sources":["services/Data.js","utility/constants.jsx","store/context/User.jsx","store/context/Project.jsx","store/reducers/Projects.jsx","pages/Project/Styles.js","pages/Project/DataTable.jsx","pages/Project/PageContainer.jsx","pages/Project/Form.jsx","pages/Project/PageAddEditContainer.jsx","pages/ProjectPage.jsx"],"names":["instance","axios","create","baseURL","getAllProject","method","url","headers","data","getProjectById","editId","getAllDivision","projectId","getDivisionById","divisionId","getAllForm","createContext","obj","ProjectContext","ProjectsReducer","state","action","userInfo","type","projects","project_data","updateProject","id","update_project","name","description","extra","fieldName","fieldValue","process","REACT_APP_CUSTOM_NODE_ENV","window","sessionStorage","clear","location","href","console","log","Button","styled","MuiButton","spacing","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","CardContent","MuiCardContent","props","theme","palette","grey","Divider","MuiCardMedia","MuiDivider","Typography","MuiTypography","Paper","MuiChip","rgbcolor","common","white","MuiAvatarGroup","MuiPaper","AddButtonContainer","Grid","DataTable","projectState","useContext","ProjectsContext","useState","open","setOpen","mb","Table","TableHead","TableRow","TableCell","TableBody","map","row","index","key","component","scope","variant","color","size","target","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","NavLink","React","forwardRef","ref","innerRef","PageContainer","useEffect","then","response","dispatch","catch","error","Fragment","title","gutterBottom","aria-label","mt","Link","to","my","container","item","lg","md","justify","Forms","project","handleChange","noValidate","autoComplete","TextField","label","style","margin","value","defaultValue","onChange","e","InputLabelProps","shrink","fullWidth","m","placeholder","multiline","rows","PageAddEditContainer","pageType","includes","exact","Form","ProjectsPage","useLocation","pathname","split","useReducer","ProjectReducer","Project","Provider"],"mappings":"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","file":"static/js/9.c2ea189a.chunk.js","sourcesContent":["import axios from 'axios';\nimport { RESTFUL_API_URL } from '../utility/constants';\n\nconst instance = axios.create({\n    baseURL: RESTFUL_API_URL,\n});\n\n//Project\nexport const getAllProject = () => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});\n\nexport const getProjectById = (editId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"id\",\"=\", `${editId}`,\"AND\"]\n                            ]\n        }\n});\n\nexport const updateProject = (project_id, name, description) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"name\", \"description\", \"extra\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", `${project_id}`, \"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ],\n            \"values\": [\n                `${new Date()} ${name}`, \n                `${new Date()} ${description}`\n            ]\n        }\n});\n\n//Division\nexport const getAllDivision = (projectId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_division',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\", \"project_id\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"project_id\",\"=\", `${projectId}`,\"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});\n\nexport const getDivisionById = (divisionId) =>\n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_division',\n            'columns':      [\"id\", \"name\", \"description\", \"title\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"id\",\"=\", `${divisionId}`,\"AND\"]\n                            ]\n        }\n});\n\n//Form\nexport const getAllForm = (divisionId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_form',\n            'columns':      [\"id\", \"no\", \"data\", \"created_time\", \"division_id\", \"state_id\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"division_id\",\"=\", `${divisionId}`,\"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});","// export const RESTFUL_API_URL = process.env.REACT_APP_RESTFUL_API_URL;\nexport const RESTFUL_API_URL = 'https://cmsdemo.ddnsking.com';\nexport const PAGE_SIZE = 20;\nexport const LANG = \"en\";","import { createContext } from 'react';\n\nconst UserContext = createContext([{}, obj => obj]);\n\nexport default UserContext;\n","import { createContext } from 'react';\n\nconst ProjectContext = createContext([{}, obj => obj]);\n\nexport default ProjectContext;\n","const ProjectsReducer = (state, action) => {\n    let userInfo = [];\n\n    switch (action.type){\n        case 'INITIAL_PROJECTS':\n\n            // console.log(action.project_data);\n            \n            return{\n                ...state,\n                projects: action.project_data,\n            }\n        case 'INITIAL_UPDATE_PROJECT':\n\n                // console.log(action.update_project[0]['description']);\n                \n                return{\n                    ...state,\n                    updateProject: {\n                        id:  action.update_project[0]['id'],\n                        name: action.update_project[0]['name'],\n                        description: action.update_project[0]['description'],\n                        extra: action.update_project[0]['extra']\n                    }\n                }\n        case 'CHANGE_TEXTFIELD':\n                return{\n                    ...state,\n                    updateProject: {\n                        ...state.updateProject,\n                        [action.fieldName]: action.fieldValue,\n                    }\n                };\n        case 'LOGOUT': \n            if (process.env.REACT_APP_CUSTOM_NODE_ENV === 'development' ||\n                process.env.REACT_APP_CUSTOM_NODE_ENV === 'staging') {\n                window.sessionStorage.clear();\n                window.location.href = '/login';\n            }\n        \n            window.location.href = '/';\n        break;\n        case 'INITIAL_USER_INFO': \n            userInfo = action.userInfo;\n            console.log(userInfo[0]);\n\n            window.location.href = '/projects';\n            //company: \"Buildking\"\n            // email: \"steve.hui@buildking.hk\"\n            // first_name: \"Steve Hui\"\n            // id: 7\n            // last_name: \"\"\n            // user_title: \"Site Agent\"\n            // username: \"Steve Hui\"\n            return{\n                ...state,\n                userInfo: userInfo\n            }\n        break;\n        default: \n            console.log(\"error\");\n            \n        return{\n            ...state\n        };   \n    }\n}\n\nexport default ProjectsReducer;","import styled from \"styled-components\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  CardMedia as MuiCardMedia,\r\n  Chip as MuiChip,\r\n  Divider as MuiDivider,\r\n  Typography as MuiTypography,\r\n  Paper as MuiPaper,\r\n  Button as MuiButton\r\n} from \"@material-ui/core\";\r\nimport { AvatarGroup as MuiAvatarGroup } from '@material-ui/lab';\r\nexport const Button = styled(MuiButton)(spacing);\r\n\r\nexport const Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nexport const Card = styled(MuiCard)`\r\n  width: 100%;\r\n`;\r\n\r\nexport const CardContent = styled(MuiCardContent)`\r\n  border-bottom: 1px solid ${props => props.theme.palette.grey[300]};\r\n`;\r\n\r\nexport const CardMedia = styled(MuiCardMedia)`\r\n  height: 220px;\r\n`;\r\n\r\nexport const Divider = styled(MuiDivider)(spacing);\r\n\r\nexport const Typography = styled(MuiTypography)(spacing);\r\n\r\nexport const Chip = styled(MuiChip)`\r\n  height: 20px;\r\n  padding: 4px 0;\r\n  font-size: 85%;\r\n  background-color: ${props => props.rgbcolor};\r\n  color: ${props => props.theme.palette.common.white};\r\n  margin-bottom: ${props => props.theme.spacing(4)}px;\r\n`;\r\n\r\nexport const AvatarGroup = styled(MuiAvatarGroup)`\r\n  margin-left: ${props => props.theme.spacing(2)}px;\r\n`\r\n\r\n// const CardContent = styled(MuiCardContent)(spacing);\r\n\r\nexport const Paper = styled(MuiPaper)`\r\n  width: 100%;\r\n`;\r\n\r\nexport const AddButtonContainer = styled(Grid)`\r\n  padding-bottom: 20px;\r\n`;","import React, { useContext, useState } from 'react';\nimport ProjectsContext from '../../store/context/Project';\nimport {\n    Grid, Link, Table,\n    TableBody, TableCell, TableHead, TableRow,\n    Dialog, DialogActions, DialogContent,DialogContentText\n  } from \"@material-ui/core\";\nimport { Card, Typography, Paper, Button, Divider, Breadcrumbs } from './Styles';\n\nconst DataTable = () => {\n    const project = useContext(ProjectsContext);\n    const projectState = project.state;\n    const [open, setOpen] = useState(false);\n\n    return (\n        <Card mb={6}>\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Id</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {projectState.projects.map((row, index) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.id}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <b>{row.name}</b>\n                    </TableCell>\n                    <TableCell>{row.description}</TableCell>\n                    <TableCell>\n                      <Button\n                        href={`/web/admin/projects/${row.id}/divisions`}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"medium\"\n                        target=\"_self\"\n                      >\n                        Details\n                      </Button>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        href={`/web/admin/projects/edit/${row.id}`}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"medium\"\n                        target=\"_self\"\n                      >\n                        Edit\n                      </Button>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        onClick={() => setOpen(true)}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"medium\"\n                        target=\"_self\"\n                      >\n                        Remove\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n            <Dialog\n              open={open}\n              onClose={() => setOpen(false)}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  Are you confirm to remove this project?\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setOpen(false)} color=\"secondary\">\n                  Cancel\n                </Button>\n                <Button variant=\"contained\" onClick={() => setOpen(false)} color=\"primary\" autoFocus>\n                  Confirm\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Paper>\n        </Card>\n      );\n}\n \nexport default DataTable;","import React, { useEffect, useContext } from 'react';\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport { Grid, Link } from '@material-ui/core';\nimport { Typography, Button, Divider, Breadcrumbs, AddButtonContainer } from './Styles';\nimport ProjectsContext from '../../store/context/Project';\nimport { getAllProject } from '../../services/Data';\nimport DataTable from './DataTable';\n\nconst NavLink = React.forwardRef((props, ref) => (\n  <RouterNavLink innerRef={ref} {...props} />\n));\n\nconst PageContainer = props => {\n  const projects = useContext(ProjectsContext);\n\n  useEffect(() => {\n      getAllProject()\n        .then(response => {\n          if (response.data.data){\n            let project_data = response.data.data;\n            projects.dispatch({type: 'INITIAL_PROJECTS', project_data});\n          }\n        })\n        .catch(error => {\n          // if (error.response) {\n          //   setIsInvalid(true);\n          //   setIsFetching(false);\n          // }\n        });\n    // }\n  }, []);\n\n  return ( \n    <React.Fragment>\n      <Helmet title=\"Projects\" />\n      <Typography variant=\"h3\" gutterBottom>\n          Projects\n      </Typography>\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n          <Link component={NavLink} to=\"/web/admin/projects\">\n              Admin\n          </Link>\n          <Typography>Projects</Typography>\n      </Breadcrumbs>\n      <Divider my={6} />\n      <AddButtonContainer container item lg={12} md={12} spacing={2} justify=\"flex-end\">\n        <Button\n          href={`/web/admin/projects/add`}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          target=\"_self\"\n        >\n          Add New Project\n        </Button>\n      </AddButtonContainer>\n      <Grid container item lg={12} md={12}>\n        <DataTable />\n      </Grid>\n    </React.Fragment>\n  );\n}\n \nexport default PageContainer;","import React, { useContext } from \"react\";\r\nimport { Card, CardContent, Typography, Paper, Divider } from './Styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport ProjectContext from '../../store/context/Project';\r\n\r\nconst Forms = () => {\r\n  const project = useContext(ProjectContext);\r\n  const projectState = project.state;\r\n  // console.log(projectState['updateProject']['name']);\r\n\r\n  const handleChange = (fieldValue, fieldName) => {\r\n    console.log(projectState);\r\n    project.dispatch({type: 'CHANGE_TEXTFIELD', fieldValue, fieldName});\r\n    \r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Paper>\r\n        <form noValidate autoComplete=\"off\">\r\n          <Grid container item lg={12}>\r\n            <Grid container item lg={6} md={4}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                style={{ margin: 8 }}\r\n                value={projectState['updateProject']['name'] ? \r\n                        projectState['updateProject']['name'] : ''\r\n                      }\r\n                defaultValue={projectState['updateProject']['name']}\r\n                onChange={e => handleChange(e.target.value, 'name')}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                fullWidth\r\n                m={5}\r\n              />\r\n            </Grid>\r\n            <Grid container item lg={6} md={8}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                style={{ margin: 8 }}\r\n                value={projectState['updateProject']['description'] ? \r\n                        projectState['updateProject']['description'] : ''\r\n                      }\r\n                defaultValue={projectState['updateProject']['description']}\r\n                onChange={e => handleChange(e.target.value, 'description')}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                type=\"text\"\r\n                fullWidth\r\n                m={5}\r\n              />\r\n            </Grid>\r\n            <Grid container item lg={12} >\r\n              <TextField\r\n                id=\"extra\"\r\n                label=\"Extra\"\r\n                style={{ margin: 8 }}\r\n                defaultValue={projectState['updateProject']['extra']}\r\n                onChange={(e) => handleChange(e.target.value, 'extra')}\r\n                placeholder=\"Extra\"\r\n                multiline\r\n                rows=\"10\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                type=\"text\"\r\n                fullWidth\r\n                m={2}\r\n              />  \r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item lg={12} justify=\"flex-end\">\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              style={{ margin: '25px 8px 0 8px' }}\r\n            >\r\n              Reset\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              style={{ margin: '25px 8px 0 8px' }}\r\n              target=\"_self\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Forms;\r\n","import React, { useEffect, useContext } from 'react';\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport { Grid, Link } from '@material-ui/core';\nimport { Typography, Button, Divider, Breadcrumbs, AddButtonContainer } from './Styles';\nimport ProjectContext from '../../store/context/Project';\nimport { getProjectById } from '../../services/Data';\nimport Form from './Form';\n\nconst NavLink = React.forwardRef((props, ref) => (\n  <RouterNavLink innerRef={ref} {...props} />\n));\n\nconst PageAddEditContainer = props => {\n  const {pageType, editId } = props;\n  const project = useContext(ProjectContext);\n  const projectState = project.state;\n\n  useEffect(() => {\n    if (pageType.includes('edit')){\n      getProjectById(editId)\n        .then(response => {\n          // console.log(response);\n          if (response.data.data){\n            let update_project = response.data.data;\n            project.dispatch({type: 'INITIAL_UPDATE_PROJECT', update_project});\n          }\n        })\n        .catch(error => {\n          // if (error.response) {\n          //   setIsInvalid(true);\n          //   setIsFetching(false);\n          // }\n        });\n    }\n   \n  }, []);\n\n  return ( \n    <React.Fragment>\n      <Helmet title=\"Projects\" />\n      <Typography variant=\"h3\" gutterBottom>\n          Projects\n      </Typography>\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n          <Link component={NavLink} exact to=\"/web/admin/projects\">\n            Admin\n          </Link>\n          <Link component={NavLink} exact to=\"/web/admin/projects\">\n            Projects\n          </Link>\n          {pageType.includes('add') ? <Typography>Add New Project</Typography> :\n            pageType.includes('edit') ? <Typography>Edit Project</Typography> : null\n          }\n      </Breadcrumbs>\n      <Divider my={6} />\n      <Grid container item lg={12} md={12}>\n        <AddButtonContainer container item lg={6} md={6}>\n          {pageType.includes('add') ? \n              <h2>Add New Project</h2>\n            : <h2>Edit Project: {projectState.updateProject.name}</h2>\n          }\n          </AddButtonContainer>\n          <Grid container item lg={6} md={6} justify=\"flex-end\">\n            <Button\n              href={`/web/admin/projects`}\n              color=\"primary\"\n              size=\"medium\"\n              target=\"_self\"\n            >\n              Back\n            </Button>\n          </Grid>\n      </Grid>\n      <Grid container item lg={12} md={12}>\n        <Form pageType={pageType} editId={editId} />\n      </Grid>\n    </React.Fragment>\n  );\n}\n \nexport default PageAddEditContainer;","\nimport React, { useReducer } from 'react';\nimport UserContext from '../store/context/User';\nimport { useLocation } from 'react-router-dom';\nimport ProjectContext from '../store/context/Project';\nimport ProjectReducer from '../store/reducers/Projects';\nimport PageContainer from './Project/PageContainer';\nimport PageAddEditContainer from './Project/PageAddEditContainer';\n\nconst ProjectsPage = props => {\n  let pageType = useLocation().pathname;\n  let editId = pageType.split('/')[5] ? pageType.split('/')[5] : null;\n//   console.log(editId);\n  const initialProjectState = {\n      projects: [],\n      updateProject: {}\n  };\n  const [state, dispatch] = useReducer(ProjectReducer, initialProjectState);\n\n  return (\n      <ProjectContext.Provider value={{state, dispatch}}>\n        {pageType.includes('add') || pageType.includes('edit') ? \n            (\n                <PageAddEditContainer \n                  pageType={pageType}\n                  editId={editId}\n                />\n            ) : (\n                <PageContainer\n                  pageType={pageType}\n                />\n            )\n        }\n      </ProjectContext.Provider>\n  );\n};\n\nexport default ProjectsPage;\n\n"],"sourceRoot":""}