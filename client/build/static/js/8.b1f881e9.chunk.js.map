{"version":3,"sources":["services/Data.js","utility/constants.jsx","store/context/Division.jsx","store/reducers/Division.jsx","pages/Division/Styles.js","pages/Division/DataTable.jsx","pages/Division/PageContainer.jsx","pages/Division/Form.jsx","pages/Division/PageAddEditContainer.jsx","pages/DivisionPage.jsx"],"names":["instance","axios","create","baseURL","getAllProject","method","url","headers","data","getProjectById","editId","getAllDivision","projectId","getDivisionById","divisionId","getAllForm","DivisionContext","createContext","obj","DivisionsReducer","state","action","userInfo","type","divisions","divisions_data","updateDivision","id","division_data","name","description","title","updateProject","fieldName","fieldValue","console","log","projectName","process","REACT_APP_CUSTOM_NODE_ENV","window","sessionStorage","setItem","JSON","stringify","error","isLoggingIn","hasRole","clear","location","href","Button","styled","MuiButton","spacing","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","CardContent","MuiCardContent","props","theme","palette","grey","Divider","MuiCardMedia","MuiDivider","Typography","MuiTypography","Paper","MuiChip","rgbcolor","common","white","MuiAvatarGroup","MuiPaper","AddButtonContainer","Grid","Title","h2","DataTable","divisionState","useContext","useState","open","setOpen","mb","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","component","scope","variant","color","size","target","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","NavLink","React","forwardRef","ref","innerRef","PageContainer","division","pageType","split","useEffect","then","response","dispatch","catch","Fragment","gutterBottom","aria-label","mt","Link","to","my","container","item","lg","alignItems","md","justify","length","Forms","editItem","DivisionsContext","handleChange","noValidate","autoComplete","includes","TextField","label","style","margin","value","defaultValue","onChange","e","InputLabelProps","shrink","fullWidth","m","PageAddEditContainer","exact","Form","DivisionPage","useLocation","pathname","useReducer","DivisionReducer","Division","Provider"],"mappings":"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","file":"static/js/8.b1f881e9.chunk.js","sourcesContent":["import axios from 'axios';\nimport { RESTFUL_API_URL } from '../utility/constants';\n\nconst instance = axios.create({\n    baseURL: RESTFUL_API_URL,\n});\n\n//Project\nexport const getAllProject = () => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});\n\nexport const getProjectById = (editId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"id\",\"=\", `${editId}`,\"AND\"]\n                            ]\n        }\n});\n\nexport const updateProject = (project_id, name, description) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"name\", \"description\", \"extra\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", `${project_id}`, \"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ],\n            \"values\": [\n                `${new Date()} ${name}`, \n                `${new Date()} ${description}`\n            ]\n        }\n});\n\n//Division\nexport const getAllDivision = (projectId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_division',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\", \"project_id\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"project_id\",\"=\", `${projectId}`,\"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});\n\nexport const getDivisionById = (divisionId) =>\n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_division',\n            'columns':      [\"id\", \"name\", \"description\", \"title\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"id\",\"=\", `${divisionId}`,\"AND\"]\n                            ]\n        }\n});\n\n//Form\nexport const getAllForm = (divisionId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_form',\n            'columns':      [\"id\", \"no\", \"data\", \"created_time\", \"division_id\", \"state_id\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"division_id\",\"=\", `${divisionId}`,\"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});","// export const RESTFUL_API_URL = process.env.REACT_APP_RESTFUL_API_URL;\nexport const RESTFUL_API_URL = 'https://cmsdemo.ddnsking.com';\nexport const PAGE_SIZE = 20;\nexport const LANG = \"en\";","import { createContext } from 'react';\n\nconst DivisionContext = createContext([{}, obj => obj]);\n\nexport default DivisionContext;\n","const DivisionsReducer = (state, action) => {\n    let userInfo = [];\n\n    switch (action.type){\n        case 'INITIAL_DIVISIONS':\n\n            // console.log(action.project_data);\n            \n            return{\n                ...state,\n                divisions: action.divisions_data,\n            }\n        case 'INITIAL_UPDATE_DIVISION':\n\n                // console.log(action.update_project[0]['description']);\n                \n                return{\n                    ...state,\n                    updateDivision: {\n                        id:  action.division_data[0]['id'],\n                        name: action.division_data[0]['name'],\n                        description: action.division_data[0]['description'],\n                        title: action.division_data[0]['title']\n                    }\n                }\n        case 'CHANGE_NEW_TEXTFIELD':\n                return{\n                    ...state,\n                    updateDivision: {\n                        ...state.updateProject,\n                        [action.fieldName]: action.fieldValue,\n                    }\n                };\n        case 'CHANGE_UPDATE_TEXTFIELD':\n                return{\n                    ...state,\n                    updateDivision: {\n                        ...state.updateProject,\n                        [action.fieldName]: action.fieldValue,\n                    }\n                };\n        case 'INITIAL_PROJECT_NAME':\n                console.log(action.projectName);\n                return{\n                    ...state,\n                    projectName: action.projectName\n                };\n        case 'SUCCESS_LOGIN': \n            \n            if (process.env.REACT_APP_CUSTOM_NODE_ENV === 'development' ||\n                process.env.REACT_APP_CUSTOM_NODE_ENV === 'staging') {\n                window.sessionStorage.setItem('user', JSON.stringify(state));\n            }\n            // console.log(window.sessionStorage);\n            return{\n                ...state,\n                error: null,\n                isLoggingIn: true,\n                hasRole: true\n            }\n        case 'LOGOUT': \n            if (process.env.REACT_APP_CUSTOM_NODE_ENV === 'development' ||\n                process.env.REACT_APP_CUSTOM_NODE_ENV === 'staging') {\n                window.sessionStorage.clear();\n                window.location.href = '/login';\n            }\n        \n            window.location.href = '/';\n        break;\n        case 'INITIAL_USER_INFO': \n            userInfo = action.userInfo;\n            console.log(userInfo[0]);\n\n            window.location.href = '/projects';\n            //company: \"Buildking\"\n            // email: \"steve.hui@buildking.hk\"\n            // first_name: \"Steve Hui\"\n            // id: 7\n            // last_name: \"\"\n            // user_title: \"Site Agent\"\n            // username: \"Steve Hui\"\n            return{\n                ...state,\n                userInfo: userInfo\n            }\n        break;\n        default: \n            console.log(\"error\");\n            \n        return{\n            ...state\n        };   \n    }\n}\n\nexport default DivisionsReducer;","import styled from \"styled-components\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  CardMedia as MuiCardMedia,\r\n  Chip as MuiChip,\r\n  Divider as MuiDivider,\r\n  Typography as MuiTypography,\r\n  Paper as MuiPaper,\r\n  Button as MuiButton\r\n} from \"@material-ui/core\";\r\nimport { AvatarGroup as MuiAvatarGroup } from '@material-ui/lab';\r\nexport const Button = styled(MuiButton)(spacing);\r\n\r\nexport const Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nexport const Card = styled(MuiCard)`\r\n  width: 100%;\r\n`;\r\n\r\nexport const CardContent = styled(MuiCardContent)`\r\n  border-bottom: 1px solid ${props => props.theme.palette.grey[300]};\r\n`;\r\n\r\nexport const CardMedia = styled(MuiCardMedia)`\r\n  height: 220px;\r\n`;\r\n\r\nexport const Divider = styled(MuiDivider)(spacing);\r\n\r\nexport const Typography = styled(MuiTypography)(spacing);\r\n\r\nexport const Chip = styled(MuiChip)`\r\n  height: 20px;\r\n  padding: 4px 0;\r\n  font-size: 85%;\r\n  background-color: ${props => props.rgbcolor};\r\n  color: ${props => props.theme.palette.common.white};\r\n  margin-bottom: ${props => props.theme.spacing(4)}px;\r\n`;\r\n\r\nexport const AvatarGroup = styled(MuiAvatarGroup)`\r\n  margin-left: ${props => props.theme.spacing(2)}px;\r\n`\r\n\r\n// const CardContent = styled(MuiCardContent)(spacing);\r\n\r\n\r\nexport const Paper = styled(MuiPaper)`\r\n  width: 100%;\r\n`;\r\n\r\nexport const AddButtonContainer = styled(Grid)`\r\n  padding-left: 10px;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin: 0;\r\n`;","import React, { useContext, useState } from 'react';\nimport DivisionContext from '../../store/context/Division';\nimport {\n    Grid, Link, Table,\n    TableBody, TableCell, TableHead, TableRow,\n    Dialog, DialogActions, DialogContent,DialogContentText\n  } from \"@material-ui/core\";\nimport { Card, Typography, Paper, Button, Divider, Breadcrumbs } from './Styles';\n\nconst DataTable = props => {\n    const division = useContext(DivisionContext);\n    const divisionState = division.state;\n    const [open, setOpen] = useState(false);\n    const { projectId } = props;\n\n    console.log(divisionState.divisions);\n\n    // \"id\": 7,\n    //       \"name\": \"ND201801_operation\",\n    //       \"title\": \"Operation\",\n    //       \"description\": \"\",\n    //       \"project_id\": 1,\n    //       \"deleted\": 0,\n    //       \"project_name\": \"ND/2018/01\"\n\n    return (\n        <Card mb={6}>\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Id</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              {divisionState.divisions.map(row => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <b>{row.name}</b>\n                  </TableCell>\n                  <TableCell>{row.description}</TableCell>\n                  <TableCell>\n                    <Button\n                      href={`/web/admin/projects/${projectId}/divisions/${row.id}/forms`}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"medium\"\n                      target=\"_self\"\n                    >\n                      Details\n                    </Button>\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      href={`/web/admin/projects/${projectId}/divisions/edit/${row.id}`}\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      size=\"medium\"\n                      target=\"_self\"\n                    >\n                      Edit\n                    </Button>\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      onClick={() => setOpen(true)}\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      size=\"medium\"\n                      target=\"_self\"\n                    >\n                      Remove\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n              </TableBody>\n            </Table>\n            <Dialog\n              open={open}\n              onClose={() => setOpen(false)}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  Are you confirm to remove this division?\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setOpen(false)} color=\"secondary\">\n                  Cancel\n                </Button>\n                <Button variant=\"contained\" onClick={() => setOpen(false)} color=\"primary\" autoFocus>\n                  Confirm\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Paper>\n        </Card>\n      );\n}\n \nexport default DataTable;","import React, { useContext, useEffect } from 'react';\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport {Grid, Link} from '@material-ui/core';\nimport DivisionContext from '../../store/context/Division';\nimport { getAllDivision, getProjectById } from '../../services/Data';\nimport { Card, Typography, Paper, Button, Divider, Breadcrumbs, AddButtonContainer, Title } from './Styles';\nimport DataTable from './DataTable';\n\nconst NavLink = React.forwardRef((props, ref) => (\n  <RouterNavLink innerRef={ref} {...props} />\n));\n\nconst PageContainer = props => {\n  const division = useContext(DivisionContext);\n  const divisionState = division.state;\n  const { pageType } = props;\n  let projectId = pageType.split('/')[4] ? pageType.split('/')[4] : null;\n\n  useEffect(() => {\n    getProjectById(projectId)\n    .then(response => {\n      \n      if (response.data.data){\n        let project_data = response.data.data;\n        let projectName = project_data[0]['name'];\n        // console.log(projectName);\n        division.dispatch({type: 'INITIAL_PROJECT_NAME', projectName});\n      }\n    })\n    .catch(error => {\n      // if (error.response) {\n      //   setIsInvalid(true);\n      //   setIsFetching(false);\n      // }\n    });\n\n    getAllDivision(projectId)\n    .then(response => {\n      // console.log(response);\n      if (response.data.data){\n        let divisions_data = response.data.data;\n        division.dispatch({type: 'INITIAL_DIVISIONS', divisions_data});\n      }\n    })\n    .catch(error => {\n      // if (error.response) {\n      //   setIsInvalid(true);\n      //   setIsFetching(false);\n      // }\n    });\n\n  }, []);\n\n  return ( \n    <React.Fragment>\n      <Helmet title=\"Divisions\" />\n      <Typography variant=\"h3\" gutterBottom>\n          Divisions\n      </Typography>\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n          <Link component={NavLink} to=\"/web/admin/projects\">\n              Admin\n          </Link>\n          <Link component={NavLink} to=\"/web/admin/projects\">\n              Projects\n          </Link>\n          <Typography>{divisionState.projectName}</Typography>\n      </Breadcrumbs>\n      <Divider my={6} />\n      <Grid container item lg={12} alignItems=\"center\">\n        <Grid container item lg={6} md={6} >\n          <Title>{divisionState.projectName}</Title>\n        </Grid>\n        <AddButtonContainer container item lg={6} md={6} spacing={2} justify=\"flex-end\">\n          <Button\n            href={`/web/admin/projects/${projectId}/divisions/add`}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            target=\"_self\"\n          >\n            Add New Division\n          </Button>\n        </AddButtonContainer>\n      </Grid>\n      {divisionState.divisions.length > 0 && <DataTable projectId={projectId} />}\n      {divisionState.divisions.length === 0 && <h2>No Record!</h2>}\n    </React.Fragment>\n  );\n}\n \nexport default PageContainer;","import React, { useContext } from \"react\";\r\nimport { Card, CardContent, Typography, Paper, Divider } from './Styles';\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport DivisionsContext from '../../store/context/Division';\r\n\r\nconst Forms = props => {\r\n  const { pageType, editItem } = props;\r\n  const division = useContext(DivisionsContext);\r\n  const divisionState = division.state;\r\n\r\n  const handleChange = (fieldValue, fieldName) => {\r\n    division.dispatch({type: 'CHANGE_UPDATE_TEXTFIELD', fieldValue, fieldName});\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Paper>\r\n        <form noValidate autoComplete=\"off\">\r\n          <Grid container item lg={12}>\r\n            <Grid container item lg={6} md={4}>\r\n                {pageType.includes('edit') ? \r\n                  <TextField\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    style={{ margin: 8 }}\r\n                    value={divisionState['updateDivision']['name'] ? \r\n                            divisionState['updateDivision']['name'] : ''\r\n                          }\r\n                    defaultValue={divisionState['updateDivision']['name']}\r\n                    onChange={e => handleChange(e.target.value, 'name')}\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    fullWidth\r\n                    m={5}\r\n                  /> \r\n                : \r\n                  <TextField\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    style={{ margin: 8 }}\r\n                    value={divisionState['updateDivision']['name'] ? \r\n                            divisionState['updateDivision']['name'] : ''\r\n                          }\r\n                    defaultValue={divisionState['updateDivision']['name']}\r\n                    onChange={e => handleChange(e.target.value, 'name')}\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    fullWidth\r\n                    m={5}\r\n                  /> \r\n              }\r\n            </Grid>\r\n            <Grid container item lg={6} md={8}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                style={{ margin: 8 }}\r\n                value={divisionState['updateDivision']['title'] ? \r\n                        divisionState['updateDivision']['title'] : ''\r\n                      }\r\n                defaultValue={divisionState['updateDivision']['title']}\r\n                onChange={e => handleChange(e.target.value, 'title')}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                type=\"text\"\r\n                fullWidth\r\n                m={5}\r\n              />\r\n            </Grid>\r\n            <Grid container item lg={12} md={12}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                style={{ margin: 8 }}\r\n                value={divisionState['updateDivision']['description'] ? \r\n                        divisionState['updateDivision']['description'] : ''\r\n                      }\r\n                defaultValue={divisionState['updateDivision']['description']}\r\n                onChange={e => handleChange(e.target.value, 'description')}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                type=\"text\"\r\n                fullWidth\r\n                m={5}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item lg={12} justify=\"flex-end\">\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              style={{ margin: '25px 8px 0 8px' }}\r\n            >\r\n              Reset\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              style={{ margin: '25px 8px 0 8px' }}\r\n              target=\"_self\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Forms;\r\n","import React, { useContext, useEffect } from 'react';\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport { Grid, Link } from '@material-ui/core';\nimport { Card, Typography, Paper, Button, Divider, Breadcrumbs, AddButtonContainer } from './Styles';\nimport DivisionContext from '../../store/context/Division';\nimport { getProjectById, getDivisionById } from '../../services/Data';\nimport Form from './Form';\n\nconst NavLink = React.forwardRef((props, ref) => (\n  <RouterNavLink innerRef={ref} {...props} />\n));\n\nconst PageAddEditContainer = props => {\n  const {pageType, editId } = props;\n  const division = useContext(DivisionContext);\n  const divisionState = division.state;\n  let projectId = pageType.split('/')[4] ? pageType.split('/')[4] : null;\n  let divisionId = pageType.split('/')[7] ? pageType.split('/')[7] : null;\n\n  console.log(divisionId);\n\n  useEffect(() => {\n    getProjectById(projectId)\n    .then(response => {\n      if (response.data.data){\n        let project_data = response.data.data;\n        let projectName = project_data[0]['name'];\n        console.log(projectName);\n        division.dispatch({type: 'INITIAL_PROJECT_NAME', projectName});\n      }\n    })\n\n    if (pageType.includes('edit')){\n\n      getDivisionById(divisionId)\n      .then(response => {\n        console.log(response);\n        if (response.data.data){\n          let division_data = response.data.data;\n          division.dispatch({type: 'INITIAL_UPDATE_DIVISION', division_data});\n        }\n      })\n      .catch(error => {\n        // if (error.response) {\n        //   setIsInvalid(true);\n        //   setIsFetching(false);\n        // }\n      });\n    }\n\n  }, []);\n\n  return ( \n    <React.Fragment>\n      <Helmet title=\"Divisions\" />\n      <Typography variant=\"h3\" gutterBottom>\n        Divisions\n      </Typography>\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n          <Link component={NavLink} exact to=\"/web/admin/projects\">\n            Admin\n          </Link>\n          <Link component={NavLink} exact to=\"/web/admin/projects\">\n            Projects\n          </Link>\n          <Link component={NavLink} exact to={`/web/admin/projects/${projectId}/divisions`}>\n            {divisionState.projectName}\n          </Link>\n          {pageType.includes('add') ? <Typography>Add New Division</Typography> :\n            pageType.includes('edit') ? <Typography>Edit Division</Typography> : null\n          }\n      </Breadcrumbs>\n      <Divider my={6} />\n      <Grid container item lg={12} md={12}>\n        <AddButtonContainer container item lg={6} md={6}>\n          {pageType.includes('add') ? \n              <h2>Add New Division</h2>\n            : <h2>Edit Division : {divisionState.updateDivision['name']}</h2>\n          }\n          </AddButtonContainer>\n          <Grid container item lg={6} md={6} justify=\"flex-end\">\n            <Button\n              href={`/web/admin/projects/${projectId}/divisions`}\n              color=\"primary\"\n              size=\"medium\"\n              target=\"_self\"\n            >\n              Back\n            </Button>\n          </Grid>\n      </Grid>\n      <Grid container item lg={12} md={12}>\n        <Form pageType={pageType} editId={editId} />\n      </Grid>\n    </React.Fragment>\n  );\n}\n \nexport default PageAddEditContainer;","import React, { useReducer } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DivisionContext from '../store/context/Division';\nimport DivisionReducer from '../store/reducers/Division';\nimport PageContainer from './Division/PageContainer';\nimport PageAddEditContainer from './Division/PageAddEditContainer';\n\nconst DivisionPage = props => {\n    let pageType = useLocation().pathname;\n\n    const initialDivisionState = {\n        projectName: '',\n        divisions: [],\n        updateDivision: {}\n    };\n    const [state, dispatch] = useReducer(DivisionReducer, initialDivisionState);\n\n  return (\n      <DivisionContext.Provider value={{state, dispatch}}>\n        {pageType.includes('add') || pageType.includes('edit') ? \n            (\n                <PageAddEditContainer \n                    pageType={pageType}\n                />\n            ) : (\n                <PageContainer \n                    pageType={pageType}\n                />\n            )\n        }\n      </DivisionContext.Provider>\n  );\n};\n\nexport default DivisionPage;\n"],"sourceRoot":""}