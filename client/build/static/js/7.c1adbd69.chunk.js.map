{"version":3,"sources":["services/Data.js","utility/constants.jsx","store/context/Division.jsx","store/context/User.jsx","store/context/Form.jsx","store/reducers/Form.jsx","pages/Form/Styles.js","pages/Form/DataTable.jsx","pages/Form/PageContainer.jsx","pages/Form/PageAddEditContainer.jsx","pages/FormPage.jsx"],"names":["instance","axios","create","baseURL","getAllProject","method","url","headers","data","getProjectById","editId","getAllDivision","projectId","getDivisionById","divisionId","getAllForm","DivisionContext","createContext","obj","FormContext","FormReducer","state","action","type","forms","forms_data","length","updateDivision","id","division_data","name","description","title","updateProject","fieldName","fieldValue","projectName","divisionName","console","log","Button","styled","MuiButton","spacing","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","Divider","MuiCardContent","props","theme","palette","grey","MuiCardMedia","MuiDivider","Typography","MuiTypography","Paper","MuiChip","rgbcolor","common","white","MuiAvatarGroup","MuiPaper","AddButtonContainer","Grid","Title","h2","Tab","Tabs","MuiTabs","TabButton","MuiTab","TabPanel","div","DataTabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","DataTable","formState","useContext","useState","setValue","items","pendingItems","filter","item","state_id","completedtems","rejectedItems","followUpItems","tabTable","itemList","mb","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","component","scope","no","created_time","href","variant","color","size","target","onChange","event","newValue","label","NavLink","React","forwardRef","ref","innerRef","PageContainer","form","formContext","pageType","split","useEffect","then","response","dispatch","catch","error","Fragment","gutterBottom","aria-label","mt","Link","to","my","container","lg","alignItems","md","justify","PageAddEditContainer","division","divisionState","includes","exact","FormPage","useLocation","pathname","useReducer","Form","Provider"],"mappings":"+TAGMA,E,OAAWC,EAAMC,OAAO,CAC1BC,QCH2B,iCDOlBC,EAAgB,kBACzBJ,EAAS,CACLK,OAAQ,OACRC,IAAK,2BACLC,QAAS,CACL,eAAgB,oBAGpBC,KAAM,CACF,UAAgB,YAChB,QAAgB,CAAC,KAAM,OAAQ,cAAe,SAC9C,MAAgB,CACI,CAAC,UAAW,IAAK,IAAK,QAE1C,QAAgB,CACI,CAAC,KAAM,YAK1BC,EAAiB,SAACC,GAAD,OAC1BV,EAAS,CACLK,OAAQ,OACRC,IAAK,2BACLC,QAAS,CACL,eAAgB,oBAGpBC,KAAM,CACF,UAAgB,YAChB,QAAgB,CAAC,KAAM,OAAQ,cAAe,SAC9C,MAAgB,CACI,CAAC,UAAW,IAAK,IAAK,OACtB,CAAC,KAAK,IAAN,UAAcE,GAAS,YA8B1CC,EAAiB,SAACC,GAAD,OAC1BZ,EAAS,CACLK,OAAQ,OACRC,IAAK,2BACLC,QAAS,CACL,eAAgB,oBAGpBC,KAAM,CACF,UAAgB,aAChB,QAAgB,CAAC,KAAM,OAAQ,cAAe,QAAS,cACvD,MAAgB,CACI,CAAC,UAAW,IAAK,IAAK,OACtB,CAAC,aAAa,IAAd,UAAsBI,GAAY,QAEtD,QAAgB,CACI,CAAC,KAAM,YAK1BC,EAAkB,SAACC,GAAD,OAC3Bd,EAAS,CACLK,OAAQ,OACRC,IAAK,2BACLC,QAAS,CACL,eAAgB,oBAGpBC,KAAM,CACF,UAAgB,aAChB,QAAgB,CAAC,KAAM,OAAQ,cAAe,SAC9C,MAAgB,CACI,CAAC,UAAW,IAAK,IAAK,OACtB,CAAC,KAAK,IAAN,UAAcM,GAAa,YAM9CC,EAAa,SAACD,GAAD,OACtBd,EAAS,CACLK,OAAQ,OACRC,IAAK,2BACLC,QAAS,CACL,eAAgB,oBAGpBC,KAAM,CACF,UAAgB,SAChB,QAAgB,CAAC,KAAM,KAAM,OAAQ,eAAgB,cAAe,YACpE,MAAgB,CACI,CAAC,UAAW,IAAK,IAAK,OACtB,CAAC,cAAc,IAAf,UAAuBM,GAAa,QAExD,QAAgB,CACI,CAAC,KAAM,a,iCE/HvC,WAEME,EAAkBC,wBAAc,CAAC,GAAI,SAAAC,GAAG,OAAIA,KAEnCF,O,iCCJf,WAEoBC,wBAAc,CAAC,GAAI,SAAAC,GAAG,OAAIA,M,4ECE/BC,G,OAFKF,wBAAc,CAAC,GAAI,SAAAC,GAAG,OAAIA,M,gBC0D/BE,EA5DK,SAACC,EAAOC,GAExB,OAAQA,EAAOC,MACX,IAAK,gBAID,kCACOF,GADP,IAEIG,MAAOF,EAAOG,WAAWC,OAAS,EAAIJ,EAAOG,WAAa,KAElE,IAAK,0BAIG,kCACOJ,GADP,IAEIM,eAAgB,CACZC,GAAKN,EAAOO,cAAc,GAArB,GACLC,KAAMR,EAAOO,cAAc,GAArB,KACNE,YAAaT,EAAOO,cAAc,GAArB,YACbG,MAAOV,EAAOO,cAAc,GAArB,SAGvB,IAAK,uBAQL,IAAK,0BACG,kCACOR,GADP,IAEIM,eAAe,2BACRN,EAAMY,eADC,kBAETX,EAAOY,UAAYZ,EAAOa,eAG3C,IAAK,uBACG,kCACOd,GADP,IAEIe,YAAad,EAAOc,cAEhC,IAAK,wBAEG,kCACOf,GADP,IAEIgB,aAAcf,EAAOe,eAEjC,QAGA,OAFIC,QAAQC,IAAI,SAEhB,eACOlB,K,ygDCrCR,IAAMmB,EAASC,YAAOC,IAAPD,CAAkBE,KAE3BC,EAAcH,YAAOI,IAAPJ,CAAuBE,KAErCG,EAAOL,YAAOM,IAAPN,CAAgBE,KAUvBK,GARcP,YAAOQ,IAAPR,CAAH,KACK,SAAAS,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,KAAK,QAGtCZ,YAAOa,IAAPb,CAAH,KAICA,YAAOc,IAAPd,CAAmBE,MAE7Ba,EAAaf,YAAOgB,IAAPhB,CAAsBE,KAgBnCe,GAdOjB,YAAOkB,IAAPlB,CAAH,KAIK,SAAAS,GAAK,OAAIA,EAAMU,YAC1B,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,QAAQS,OAAOC,SAC5B,SAAAZ,GAAK,OAAIA,EAAMC,MAAMR,QAAQ,MAGrBF,YAAOsB,IAAPtB,CAAH,KACP,SAAAS,GAAK,OAAIA,EAAMC,MAAMR,QAAQ,MAIzBF,YAAOuB,IAAPvB,CAAiBE,MAEzBsB,EAAqBxB,YAAOyB,IAAPzB,CAAH,KAGlB0B,EAAQ1B,IAAO2B,GAAV,KAILC,EAAO5B,YAAOiB,EAAPjB,CAAJ,KAUH6B,EAAO7B,YAAO8B,IAAP9B,CAAH,KAYJ+B,EAAY/B,YAAOgC,IAAPhC,CAAH,KAKTiC,EAAWjC,IAAOkC,IAAV,K,sEC9EfC,GAAe,SAAC1B,GAAW,IACvB2B,EAAqC3B,EAArC2B,SAAUC,EAA2B5B,EAA3B4B,MAAOC,EAAoB7B,EAApB6B,MAAUC,EADL,aACe9B,EADf,8BAE9B,OACE,kBAACwB,EAAD,eACEO,KAAK,WACLC,OAAQJ,IAAUC,EAClBnD,GAAE,0BAAqBmD,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GAEHF,IAAUC,GACT,kBAACK,GAAA,EAAD,CAAKC,EAAG,GACLR,KA8GIS,GAvGG,WACd,IACMC,EADOC,qBAAWrE,GACDE,MAFH,EAGMoE,mBAAS,GAHf,mBAGbX,EAHa,KAGNY,EAHM,KAIdC,EAAQJ,EAAU/D,MAClBoE,EAAeD,EAAME,QAAO,SAAAC,GAAI,OAAsB,IAAlBA,EAAKC,YACzCC,EAAgBL,EAAME,QAAO,SAAAC,GAAI,OAAsB,IAAlBA,EAAKC,YAC1CE,EAAgBN,EAAME,QAAO,SAAAC,GAAI,OAAsB,IAAlBA,EAAKC,YAC1CG,EAAgBP,EAAME,QAAO,SAAAC,GAAI,OAAsB,IAAlBA,EAAKC,YAMhDzD,QAAQC,IAAIgD,GAEZ,IAAMY,EAAW,SAACC,GAEhB,OACE,kBAAC,EAAD,CAAMC,GAAI,GACN,kBAAC,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,UACA,kBAACA,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,QAGJ,kBAACC,GAAA,EAAD,KACCN,EAASO,KAAI,SAACC,EAAK7B,GAAN,OACZ,kBAACyB,GAAA,EAAD,CAAUK,IAAKD,EAAIhF,IACjB,kBAAC6E,GAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,OAC7BhC,EAAM,GAET,kBAAC0B,GAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,OAC7BH,EAAIhF,IAEP,kBAAC6E,GAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,OAC9B,2BAAIH,EAAII,KAEV,kBAACP,GAAA,EAAD,KAAYG,EAAIK,cAChB,kBAACR,GAAA,EAAD,KACE,kBAAC,EAAD,CACES,KAAI,4EAAuEN,EAAIhF,IAC/EuF,QAAQ,YACRC,MAAM,UACNC,KAAK,SACLC,OAAO,UALT,YAUF,kBAACb,GAAA,EAAD,KACE,kBAAC,EAAD,CACES,KAAI,6BAAwBN,EAAIhF,IAChCuF,QAAQ,YACRC,MAAM,YACNC,KAAK,SACLC,OAAO,SALT,oBAmBlB,OACE,kBAAC,EAAD,KACI,kBAAC,EAAD,CACExC,MAAOA,EACPyC,SAtEa,SAACC,EAAOC,GAC3B/B,EAAS+B,KAuEH,kBAACjD,EAAD,CAAWkD,MAAK,mBAAc9B,EAAalE,OAA3B,OAChB,kBAAC8C,EAAD,CAAWkD,MAAK,qBAAgB1B,EAActE,OAA9B,OAChB,kBAAC8C,EAAD,CAAWkD,MAAK,oBAAezB,EAAcvE,OAA7B,OAChB,kBAAC8C,EAAD,CAAWkD,MAAK,qBAAgBxB,EAAcxE,OAA9B,QAElB,kBAAC,GAAD,CAAcoD,MAAOA,EAAOC,MAAO,GAChCa,EAAalE,OAAS,GAAKyE,EAASP,IAEvC,kBAAC,GAAD,CAAcd,MAAOA,EAAOC,MAAO,GAChCiB,EAActE,OAAS,GAAKyE,EAASH,IAExC,kBAAC,GAAD,CAAclB,MAAOA,EAAOC,MAAO,GAChCkB,EAAcvE,OAAS,GAAKyE,EAASF,IAExC,kBAAC,GAAD,CAAcnB,MAAOA,EAAOC,MAAO,GAChCmB,EAAcxE,OAAS,GAAKyE,EAASD,MCnH5CyB,GAAUC,IAAMC,YAAW,SAAC3E,EAAO4E,GAAR,OAC/B,kBAAC,IAAD,eAAeC,SAAUD,GAAS5E,OA2GrB8E,GAxGO,SAAA9E,GACpB,IAAM+E,EAAOzC,qBAAW0C,GAClB3C,EAAY0C,EAAK5G,MACf8G,EAAajF,EAAbiF,SACJvH,EAAYuH,EAASC,MAAM,KAAK,GAAKD,EAASC,MAAM,KAAK,GAAK,KAC9DtH,EAAaqH,EAASC,MAAM,KAAK,GAAKD,EAASC,MAAM,KAAK,GAAK,KA0DnE,OAvDAC,qBAAU,WACR5H,YAAeG,GACZ0H,MAAK,SAAAC,GAEJ,GAAIA,EAAS/H,KAAKA,KAAK,CACrB,IACI4B,EADemG,EAAS/H,KAAKA,KACF,GAAb,KAElByH,EAAKO,SAAS,CAACjH,KAAM,uBAAwBa,oBAGhDqG,OAAM,SAAAC,OAOT7H,YAAgBC,GACbwH,MAAK,SAAAC,GAEJ,GAAIA,EAAS/H,KAAKA,KAAK,CACrB,IACI6B,EADgBkG,EAAS/H,KAAKA,KACD,GAAd,KAEnByH,EAAKO,SAAS,CAACjH,KAAM,wBAAyBc,qBAGjDoG,OAAM,SAAAC,OAOT3H,YAAWD,GACRwH,MAAK,SAAAC,GAEJ,GAAIA,EAAS/H,KAAKA,KAAK,CAErB,IAAIiB,EAAa8G,EAAS/H,KAAKA,KAC/ByH,EAAKO,SAAS,CAACjH,KAAM,gBAAiBE,mBAGzCgH,OAAM,SAAAC,SAOR,IAKD,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAQ3G,MAAM,UACd,kBAAC,EAAD,CAAYmF,QAAQ,KAAKyB,cAAY,GAArC,SAGA,kBAAC,EAAD,CAAaC,aAAW,aAAaC,GAAI,GACrC,kBAACC,EAAA,EAAD,CAAMjC,UAAWa,GAASqB,GAAG,uBAA7B,SAGA,kBAACD,EAAA,EAAD,CAAMjC,UAAWa,GAASqB,GAAG,uBAA7B,YAGA,kBAACD,EAAA,EAAD,CAAMjC,UAAWa,GAASqB,GAAE,8BAAyBpI,EAAzB,eACvB2E,EAAUnD,aAEf,kBAAC,EAAD,KAAamD,EAAUlD,eAE3B,kBAAC,EAAD,CAAS4G,GAAI,IACb,kBAAC/E,EAAA,EAAD,CAAMgF,WAAS,EAACpD,MAAI,EAACqD,GAAI,GAAIC,WAAW,UACtC,kBAAClF,EAAA,EAAD,CAAMgF,WAAS,EAACpD,MAAI,EAACqD,GAAI,EAAGE,GAAI,GAC9B,kBAAClF,EAAD,KAAQoB,EAAUlD,eAEpB,kBAAC4B,EAAD,CAAoBiF,WAAS,EAACpD,MAAI,EAAEsD,WAAW,SAASD,GAAI,EAAGE,GAAI,EAAGC,QAAQ,YAC5E,kBAAC,EAAD,CACEpC,KAAI,YACJC,QAAQ,YACRC,MAAM,UACNC,KAAK,QACLC,OAAO,SALT,kBAWH/B,EAAU/D,MAAME,OAAS,GAAK,kBAAC,GAAD,CAAWZ,WAAYA,IAC1B,IAA3ByE,EAAU/D,MAAME,QAAgB,4C,UCxGjCiG,GAAUC,IAAMC,YAAW,SAAC3E,EAAO4E,GAAR,OAC/B,kBAAC,IAAD,eAAeC,SAAUD,GAAS5E,OAwFrBqG,GArFc,SAAArG,GAAU,IAC9BiF,EAAqBjF,EAArBiF,SACDqB,GADsBtG,EAAXxC,OACA8E,qBAAWxE,OACtByI,EAAgBD,EAASnI,MAC3BT,EAAYuH,EAASC,MAAM,KAAK,GAAKD,EAASC,MAAM,KAAK,GAAK,KAC9DtH,EAAaqH,EAASC,MAAM,KAAK,GAAKD,EAASC,MAAM,KAAK,GAAK,KAmCnE,OAjCA9F,QAAQC,IAAIzB,GAEZuH,qBAAU,WACR5H,YAAeG,GACd0H,MAAK,SAAAC,GACJ,GAAIA,EAAS/H,KAAKA,KAAK,CACrB,IACI4B,EADemG,EAAS/H,KAAKA,KACF,GAAb,KAClB8B,QAAQC,IAAIH,GACZoH,EAAShB,SAAS,CAACjH,KAAM,uBAAwBa,oBAIjD+F,EAASuB,SAAS,SAEpB7I,YAAgBC,GACfwH,MAAK,SAAAC,GAEJ,GADAjG,QAAQC,IAAIgG,GACRA,EAAS/H,KAAKA,KAAK,CACrB,IAAIqB,EAAgB0G,EAAS/H,KAAKA,KAClCgJ,EAAShB,SAAS,CAACjH,KAAM,0BAA2BM,sBAGvD4G,OAAM,SAAAC,SAQR,IAGD,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAQ3G,MAAM,cACd,kBAAC,EAAD,CAAYmF,QAAQ,KAAKyB,cAAY,GAArC,aAGA,kBAAC,EAAD,CAAaC,aAAW,aAAaC,GAAI,GACrC,kBAACC,EAAA,EAAD,CAAMjC,UAAWa,GAASgC,OAAK,EAACX,GAAG,uBAAnC,SAGA,kBAACD,EAAA,EAAD,CAAMjC,UAAWa,GAASgC,OAAK,EAACX,GAAG,uBAAnC,YAGA,kBAACD,EAAA,EAAD,CAAMjC,UAAWa,GAASgC,OAAK,EAACX,GAAE,8BAAyBpI,EAAzB,eAC/B6I,EAAcrH,aAEhB+F,EAASuB,SAAS,OAAS,kBAAC,EAAD,yBAC1BvB,EAASuB,SAAS,QAAU,kBAAC,EAAD,sBAAyC,MAG3E,kBAAC,EAAD,CAAST,GAAI,IACb,kBAAC/E,EAAA,EAAD,CAAMgF,WAAS,EAACpD,MAAI,EAACqD,GAAI,GAAIE,GAAI,IAC/B,kBAACpF,EAAD,CAAoBiF,WAAS,EAACpD,MAAI,EAACqD,GAAI,EAAGE,GAAI,GAC3ClB,EAASuB,SAAS,OACf,gDACA,+CAAqBD,EAAc9H,eAAd,OAGzB,kBAACuC,EAAA,EAAD,CAAMgF,WAAS,EAACpD,MAAI,EAACqD,GAAI,EAAGE,GAAI,EAAGC,QAAQ,YACzC,kBAAC,EAAD,CACEpC,KAAI,8BAAyBtG,EAAzB,cACJwG,MAAM,UACNC,KAAK,SACLC,OAAO,SAJT,UAUN,kBAACpD,EAAA,EAAD,CAAMgF,WAAS,EAACpD,MAAI,EAACqD,GAAI,GAAIE,GAAI,OCvDxBO,UA5BE,SAAA1G,GACf,IAAIiF,EAAW0B,cAAcC,SACzBpJ,EAASyH,EAASC,MAAM,KAAK,GAAKD,EAASC,MAAM,KAAK,GAAK,KAFvC,EAQE2B,qBAAW3I,EAJZ,CACvBoI,SAAU,GACVhI,MAAO,KANe,mBAQjBH,EARiB,KAQVmH,EARU,KAUxB,OACI,kBAACwB,EAAYC,SAAb,CAAsBnF,MAAO,CAACzD,QAAOmH,aAClCL,EAASuB,SAAS,QAAUvB,EAASuB,SAAS,QAEzC,kBAAC,GAAD,CACEvB,SAAUA,EACVzH,OAAQA,IAGV,kBAAC,GAAD,CACEyH,SAAUA","file":"static/js/7.c1adbd69.chunk.js","sourcesContent":["import axios from 'axios';\nimport { RESTFUL_API_URL } from '../utility/constants';\n\nconst instance = axios.create({\n    baseURL: RESTFUL_API_URL,\n});\n\n//Project\nexport const getAllProject = () => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});\n\nexport const getProjectById = (editId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"id\",\"=\", `${editId}`,\"AND\"]\n                            ]\n        }\n});\n\nexport const updateProject = (project_id, name, description) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_project',\n            'columns':      [\"name\", \"description\", \"extra\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", `${project_id}`, \"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ],\n            \"values\": [\n                `${new Date()} ${name}`, \n                `${new Date()} ${description}`\n            ]\n        }\n});\n\n//Division\nexport const getAllDivision = (projectId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_division',\n            'columns':      [\"id\", \"name\", \"description\", \"extra\", \"project_id\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"project_id\",\"=\", `${projectId}`,\"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});\n\nexport const getDivisionById = (divisionId) =>\n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_division',\n            'columns':      [\"id\", \"name\", \"description\", \"title\"],\n            \"where\":        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"id\",\"=\", `${divisionId}`,\"AND\"]\n                            ]\n        }\n});\n\n//Form\nexport const getAllForm = (divisionId) => \n    instance({\n        method: 'POST',\n        url: '/api/cms/table/t_select/',\n        headers: { \n            'Content-Type': 'application/json',\n            // 'X-CSRFToken':  csrfToken,\n        },\n        data: {\n            'tableName':    'i_form',\n            'columns':      [\"id\", \"no\", \"data\", \"created_time\", \"division_id\", \"state_id\"],\n            'where':        [\n                                [\"deleted\", \"=\", \"0\", \"AND\"],\n                                [\"division_id\",\"=\", `${divisionId}`,\"AND\"]\n                            ],\n            \"orderBy\":      [\n                                [\"id\", \"ASC\"]\n                            ]\n        }\n});","// export const RESTFUL_API_URL = process.env.REACT_APP_RESTFUL_API_URL;\nexport const RESTFUL_API_URL = 'https://cmsdemo.ddnsking.com';\nexport const PAGE_SIZE = 20;\nexport const LANG = \"en\";","import { createContext } from 'react';\n\nconst DivisionContext = createContext([{}, obj => obj]);\n\nexport default DivisionContext;\n","import { createContext } from 'react';\n\nconst UserContext = createContext([{}, obj => obj]);\n\nexport default UserContext;\n","import { createContext } from 'react';\n\nconst FormContext = createContext([{}, obj => obj]);\n\nexport default FormContext;\n","const FormReducer = (state, action) => {\n\n    switch (action.type){\n        case 'INITIAL_FORMS':\n\n            // console.log(action.project_data);\n            \n            return{\n                ...state,\n                forms: action.forms_data.length > 0 ? action.forms_data : [],\n            }\n        case 'INITIAL_UPDATE_DIVISION':\n\n                // console.log(action.update_project[0]['description']);\n                \n                return{\n                    ...state,\n                    updateDivision: {\n                        id:  action.division_data[0]['id'],\n                        name: action.division_data[0]['name'],\n                        description: action.division_data[0]['description'],\n                        title: action.division_data[0]['title']\n                    }\n                }\n        case 'CHANGE_NEW_TEXTFIELD':\n                return{\n                    ...state,\n                    updateDivision: {\n                        ...state.updateProject,\n                        [action.fieldName]: action.fieldValue,\n                    }\n                };\n        case 'CHANGE_UPDATE_TEXTFIELD':\n                return{\n                    ...state,\n                    updateDivision: {\n                        ...state.updateProject,\n                        [action.fieldName]: action.fieldValue,\n                    }\n                };\n        case 'INITIAL_PROJECT_NAME':\n                return{\n                    ...state,\n                    projectName: action.projectName\n                };\n        case 'INITIAL_DIVISION_NAME':\n                // console.log(action.divisionName);\n                return{\n                    ...state,\n                    divisionName: action.divisionName\n                };\n        default: \n            console.log(\"error\");\n            \n        return{\n            ...state\n        };   \n    }\n}\n\nexport default FormReducer;","import styled from \"styled-components\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  CardMedia as MuiCardMedia,\r\n  Chip as MuiChip,\r\n  Divider as MuiDivider,\r\n  Typography as MuiTypography,\r\n  Paper as MuiPaper,\r\n  Button as MuiButton,\r\n  Tabs as MuiTabs,\r\n  Tab as MuiTab,\r\n} from \"@material-ui/core\";\r\nimport { AvatarGroup as MuiAvatarGroup } from '@material-ui/lab';\r\nexport const Button = styled(MuiButton)(spacing);\r\n\r\nexport const Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nexport const Card = styled(MuiCard)(spacing);\r\n\r\nexport const CardContent = styled(MuiCardContent)`\r\n  border-bottom: 1px solid ${props => props.theme.palette.grey[300]};\r\n`;\r\n\r\nexport const CardMedia = styled(MuiCardMedia)`\r\n  height: 220px;\r\n`;\r\n\r\nexport const Divider = styled(MuiDivider)(spacing);\r\n\r\nexport const Typography = styled(MuiTypography)(spacing);\r\n\r\nexport const Chip = styled(MuiChip)`\r\n  height: 20px;\r\n  padding: 4px 0;\r\n  font-size: 85%;\r\n  background-color: ${props => props.rgbcolor};\r\n  color: ${props => props.theme.palette.common.white};\r\n  margin-bottom: ${props => props.theme.spacing(4)}px;\r\n`;\r\n\r\nexport const AvatarGroup = styled(MuiAvatarGroup)`\r\n  margin-left: ${props => props.theme.spacing(2)}px;\r\n`\r\n// const CardContent = styled(MuiCardContent)(spacing);\r\n\r\nexport const Paper = styled(MuiPaper)(spacing);\r\n\r\nexport const AddButtonContainer = styled(Grid)`\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin: 0;\r\n`;\r\n\r\nexport const Tab  = styled(Paper)`\r\n  margin-top: 2em;\r\n  box-shadow: none;\r\n  background: none;\r\n  \r\n  .MuiTabs-indicator: {\r\n    background-color: #25616C;\r\n  }\r\n`;\r\n\r\nexport const Tabs = styled(MuiTabs)`\r\n  box-shadow: none;\r\n  /* border: 1px solid red; */\r\n  background-color: #fff;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  \r\n  .MuiTabs-indicator: {\r\n    background-color: #25616C;\r\n  }\r\n`;\r\n\r\nexport const TabButton = styled(MuiTab)`\r\n  color: #25616C;\r\n  text-align: 'left';\r\n`;\r\n\r\nexport const TabPanel = styled.div`\r\n  background-color: #f7f7f7;\r\n\r\n  .MuiBox-root: {\r\n    padding: '1em 2em';\r\n  }\r\n`","import React, { useContext, useState } from 'react';\nimport FormContext from '../../store/context/Form';\nimport {\n    Grid, Link, Table, Box,\n    TableBody, TableCell, TableHead, TableRow\n  } from \"@material-ui/core\";\nimport { Card, Typography, Paper, Button, Tab, Tabs, TabButton, TabPanel } from './Styles';\n\nconst DataTabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n  return (\n    <TabPanel\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </TabPanel>\n  );\n}\n\nconst DataTable = () => {\n    const form = useContext(FormContext);\n    const formState = form.state;\n    const [value, setValue] = useState(0);\n    const items = formState.forms;\n    const pendingItems = items.filter(item => item.state_id === 1);\n    const completedtems = items.filter(item => item.state_id === 2);\n    const rejectedItems = items.filter(item => item.state_id === 3);\n    const followUpItems = items.filter(item => item.state_id === 4);\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n    console.log(formState);\n\n    const tabTable = (itemList) => {\n\n      return (\n        <Card mb={6}>\n            <Paper>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Id</TableCell>\n                    <TableCell>No</TableCell>\n                    <TableCell>Created Time</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                {itemList.map((row, index) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {index+1}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.id}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <b>{row.no}</b>\n                    </TableCell>\n                    <TableCell>{row.created_time}</TableCell>\n                    <TableCell>\n                      <Button\n                        href={`https://cerebro.servehttp.com/formlist/html/genReport.php?form_id=${row.id}`}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"medium\"\n                        target=\"_blank\"\n                      >\n                        Preview\n                      </Button>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        href={`/admin/form/remove/${row.id}`}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"medium\"\n                        target=\"_self\"\n                      >\n                        Remove\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                </TableBody>\n              </Table>\n            </Paper>\n        </Card>\n      );\n    }\n\n    return (\n      <Tab>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n          >\n            <TabButton label={`Pending (${pendingItems.length})`} />\n            <TabButton label={`Completed (${completedtems.length})`} />\n            <TabButton label={`Rejected (${rejectedItems.length})`} />\n            <TabButton label={`Follow up (${followUpItems.length})`} />\n          </Tabs>\n          <DataTabPanel value={value} index={0}>\n            {pendingItems.length > 0 && tabTable(pendingItems)}\n          </DataTabPanel>\n          <DataTabPanel value={value} index={1}>\n            {completedtems.length > 0 && tabTable(completedtems)}\n          </DataTabPanel>\n          <DataTabPanel value={value} index={2}>\n            {rejectedItems.length > 0 && tabTable(rejectedItems)}\n          </DataTabPanel>\n          <DataTabPanel value={value} index={3}>\n            {followUpItems.length > 0 && tabTable(followUpItems)}\n          </DataTabPanel>\n        </Tab>\n      );\n}\n \nexport default DataTable;","import React, { useContext, useEffect } from 'react';\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport {Grid, Link} from '@material-ui/core';\nimport formContext from '../../store/context/Form';\nimport { getAllForm, getProjectById, getDivisionById } from '../../services/Data';\nimport { Typography, Button, Divider, Breadcrumbs, AddButtonContainer, Title } from './Styles';\nimport DataTable from './DataTable';\n\nconst NavLink = React.forwardRef((props, ref) => (\n  <RouterNavLink innerRef={ref} {...props} />\n));\n\nconst PageContainer = props => {\n  const form = useContext(formContext);\n  const formState = form.state;\n  const { pageType } = props;\n  let projectId = pageType.split('/')[4] ? pageType.split('/')[4] : null;\n  let divisionId = pageType.split('/')[6] ? pageType.split('/')[6] : null;\n  // console.log(divisionId);\n\n  useEffect(() => {\n    getProjectById(projectId)\n      .then(response => {\n        \n        if (response.data.data){\n          let project_data = response.data.data;\n          let projectName = project_data[0]['name'];\n          // console.log(projectName);\n          form.dispatch({type: 'INITIAL_PROJECT_NAME', projectName});\n        }\n      })\n      .catch(error => {\n        // if (error.response) {\n        //   setIsInvalid(true);\n        //   setIsFetching(false);\n        // }\n      });\n\n    getDivisionById(divisionId)\n      .then(response => {\n        // console.log(response);\n        if (response.data.data){\n          let division_data = response.data.data;\n          let divisionName = division_data[0]['name'];\n          // console.log(divisionName);\n          form.dispatch({type: 'INITIAL_DIVISION_NAME', divisionName});\n        }\n      })\n      .catch(error => {\n        // if (error.response) {\n        //   setIsInvalid(true);\n        //   setIsFetching(false);\n        // }\n      });\n\n    getAllForm(divisionId)\n      .then(response => {\n        // console.log(response);\n        if (response.data.data){\n          // console.log(response);\n          let forms_data = response.data.data;\n          form.dispatch({type: 'INITIAL_FORMS', forms_data});\n        }\n      })\n      .catch(error => {\n        // if (error.response) {\n        //   setIsInvalid(true);\n        //   setIsFetching(false);\n        // }\n      });\n\n  }, []);\n\n  // console.log(formState)\n\n  return ( \n    <React.Fragment>\n      <Helmet title=\"Forms\" />\n      <Typography variant=\"h3\" gutterBottom>\n          Forms\n      </Typography>\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n          <Link component={NavLink} to=\"/web/admin/projects\">\n              Admin\n          </Link>\n          <Link component={NavLink} to=\"/web/admin/projects\">\n              Projects\n          </Link>\n          <Link component={NavLink} to={`/web/admin/projects/${projectId}/divisions`}>\n              {formState.projectName}\n          </Link>\n          <Typography>{formState.divisionName}</Typography>\n      </Breadcrumbs>\n      <Divider my={6} />\n      <Grid container item lg={12} alignItems=\"center\">\n        <Grid container item lg={6} md={6} >\n          <Title>{formState.divisionName}</Title>\n        </Grid>\n        <AddButtonContainer container item  alignItems=\"center\" lg={6} md={6} justify=\"flex-end\">\n          <Button\n            href={`/form/add`}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            target=\"_self\"\n          >\n            Add New Form\n          </Button>\n        </AddButtonContainer>\n      </Grid>\n      {formState.forms.length > 0 && <DataTable divisionId={divisionId} />}\n      {formState.forms.length === 0 && <h2>No Record!</h2>}\n    </React.Fragment>\n  );\n}\n \nexport default PageContainer;","import React, { useContext, useEffect } from 'react';\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport { Grid, Link } from '@material-ui/core';\nimport { Card, Typography, Paper, Button, Divider, Breadcrumbs, AddButtonContainer } from './Styles';\nimport DivisionContext from '../../store/context/Division';\nimport { getProjectById, getDivisionById } from '../../services/Data';\n\nconst NavLink = React.forwardRef((props, ref) => (\n  <RouterNavLink innerRef={ref} {...props} />\n));\n\nconst PageAddEditContainer = props => {\n  const {pageType, editId } = props;\n  const division = useContext(DivisionContext);\n  const divisionState = division.state;\n  let projectId = pageType.split('/')[4] ? pageType.split('/')[4] : null;\n  let divisionId = pageType.split('/')[7] ? pageType.split('/')[7] : null;\n\n  console.log(divisionId);\n\n  useEffect(() => {\n    getProjectById(projectId)\n    .then(response => {\n      if (response.data.data){\n        let project_data = response.data.data;\n        let projectName = project_data[0]['name'];\n        console.log(projectName);\n        division.dispatch({type: 'INITIAL_PROJECT_NAME', projectName});\n      }\n    })\n\n    if (pageType.includes('edit')){\n\n      getDivisionById(divisionId)\n      .then(response => {\n        console.log(response);\n        if (response.data.data){\n          let division_data = response.data.data;\n          division.dispatch({type: 'INITIAL_UPDATE_DIVISION', division_data});\n        }\n      })\n      .catch(error => {\n        // if (error.response) {\n        //   setIsInvalid(true);\n        //   setIsFetching(false);\n        // }\n      });\n    }\n\n  }, []);\n\n  return ( \n    <React.Fragment>\n      <Helmet title=\"Divisions\" />\n      <Typography variant=\"h3\" gutterBottom>\n        Divisions\n      </Typography>\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n          <Link component={NavLink} exact to=\"/web/admin/projects\">\n            Admin\n          </Link>\n          <Link component={NavLink} exact to=\"/web/admin/projects\">\n            Projects\n          </Link>\n          <Link component={NavLink} exact to={`/web/admin/projects/${projectId}/divisions`}>\n            {divisionState.projectName}\n          </Link>\n          {pageType.includes('add') ? <Typography>Add New Division</Typography> :\n            pageType.includes('edit') ? <Typography>Edit Division</Typography> : null\n          }\n      </Breadcrumbs>\n      <Divider my={6} />\n      <Grid container item lg={12} md={12}>\n        <AddButtonContainer container item lg={6} md={6}>\n          {pageType.includes('add') ? \n              <h2>Add New Division</h2>\n            : <h2>Edit Division : {divisionState.updateDivision['name']}</h2>\n          }\n          </AddButtonContainer>\n          <Grid container item lg={6} md={6} justify=\"flex-end\">\n            <Button\n              href={`/web/admin/projects/${projectId}/divisions`}\n              color=\"primary\"\n              size=\"medium\"\n              target=\"_self\"\n            >\n              Back\n            </Button>\n          </Grid>\n      </Grid>\n      <Grid container item lg={12} md={12}>\n      </Grid>\n    </React.Fragment>\n  );\n}\n \nexport default PageAddEditContainer;","import React, { useReducer } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport UserContext from '../store/context/User';\nimport FormContext from '../store/context/Form';\nimport FormReducer from '../store/reducers/Form';\nimport PageContainer from './Form/PageContainer';\nimport PageAddEditContainer from './Form/PageAddEditContainer';\n\nconst FormPage = props => {\n  let pageType = useLocation().pathname;\n  let editId = pageType.split('/')[5] ? pageType.split('/')[5] : null;\n//   console.log(props.id);\n  const initialFormState = {\n    division: [],\n    forms: []\n  };\n  const [state, dispatch] = useReducer(FormReducer, initialFormState);\n\n  return (\n      <FormContext.Provider value={{state, dispatch}}>\n        {pageType.includes('add') || pageType.includes('edit') ? \n          (\n              <PageAddEditContainer \n                pageType={pageType}\n                editId={editId}\n              />\n          ) : (\n              <PageContainer\n                pageType={pageType}\n              />\n          )\n        }\n      </FormContext.Provider>\n  );\n};\n\nexport default FormPage;"],"sourceRoot":""}