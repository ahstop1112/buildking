{"version":3,"sources":["../node_modules/@material-ui/core/esm/colors/deepOrange.js","../node_modules/@material-ui/core/esm/colors/deepPurple.js","pages/components/Avatars.js","../node_modules/@material-ui/icons/esm/Folder.js","../node_modules/@material-ui/icons/esm/Pageview.js","../node_modules/@material-ui/icons/esm/Assignment.js"],"names":["deepOrange","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","deepPurple","NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Avatar","MuiAvatar","theme","BigAvatar","PinkAvatar","pink","GreenAvatar","green","OrangeAvatar","PurpleAvatar","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","ImageAvatars","mb","CardContent","Typography","variant","gutterBottom","Grid","container","justify","alignItems","alt","src","LetterAvatars","IconAvatars","Folder","Pageview","Assignment","Avatars","Fragment","title","display","aria-label","mt","Link","component","exact","to","my","item","xs","md","createSvgIcon","createElement","d"],"mappings":"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","file":"static/js/36.9b21d9bf.chunk.js","sourcesContent":["var deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;","var deepPurple = {\n  50: '#ede7f6',\n  100: '#d1c4e9',\n  200: '#b39ddb',\n  300: '#9575cd',\n  400: '#7e57c2',\n  500: '#673ab7',\n  600: '#5e35b1',\n  700: '#512da8',\n  800: '#4527a0',\n  900: '#311b92',\n  A100: '#b388ff',\n  A200: '#7c4dff',\n  A400: '#651fff',\n  A700: '#6200ea'\n};\nexport default deepPurple;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  CardContent,\r\n  Grid,\r\n  Link,\r\n  Avatar as MuiAvatar,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { deepOrange, deepPurple, green, pink } from \"@material-ui/core/colors\";\r\n\r\nimport {\r\n  Assignment as AssignmentIcon,\r\n  Folder as FolderIcon,\r\n  Pageview as PageviewIcon\r\n} from \"@material-ui/icons\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Avatar = styled(MuiAvatar)`\r\n  margin-right: ${props => props.theme.spacing(2)}px;\r\n`;\r\n\r\nconst BigAvatar = styled(Avatar)`\r\n  width: 60px;\r\n  height: 60px;\r\n`;\r\n\r\nconst PinkAvatar = styled(Avatar)`\r\n  background-color: ${pink[500]};\r\n`;\r\n\r\nconst GreenAvatar = styled(Avatar)`\r\n  background-color: ${green[500]};\r\n`;\r\n\r\nconst OrangeAvatar = styled(Avatar)`\r\n  background-color: ${deepOrange[500]};\r\n`;\r\n\r\nconst PurpleAvatar = styled(Avatar)`\r\n  background-color: ${deepPurple[500]};\r\n`;\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nfunction ImageAvatars() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Image Avatars\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Image avatars can be created by passing standard img props src or\r\n          srcSet into the component.\r\n        </Typography>\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/img/avatars/avatar-1.jpg\" />\r\n          <BigAvatar alt=\"Remy Sharp\" src=\"/static/img/avatars/avatar-1.jpg\" />\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction LetterAvatars() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Letter avatars\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Avatars containing simple characters can be created by passing your\r\n          string as children.\r\n        </Typography>\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Avatar>H</Avatar>\r\n          <OrangeAvatar>N</OrangeAvatar>\r\n          <PurpleAvatar>OP</PurpleAvatar>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction IconAvatars() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Icon avatars\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Icon avatars are created by passing an icon as children.\r\n        </Typography>\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Avatar>\r\n            <FolderIcon />\r\n          </Avatar>\r\n          <PinkAvatar>\r\n            <PageviewIcon />\r\n          </PinkAvatar>\r\n          <GreenAvatar>\r\n            <AssignmentIcon />\r\n          </GreenAvatar>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Avatars() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Avatars\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Avatars\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Avatars</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <ImageAvatars />\r\n          <LetterAvatars />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <IconAvatars />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Avatars;\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"\n}), 'Folder');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z\"\n}), 'Pageview');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"\n}), 'Assignment');"],"sourceRoot":""}