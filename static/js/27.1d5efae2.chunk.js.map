{"version":3,"sources":["pages/components/Badges.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/icons/esm/Mail.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Badge","MuiBadge","TabBadge","AppBar","MuiAppBar","Spacer","div","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","IconBadges","mb","variant","gutterBottom","badgeContent","color","mr","TabBadges","position","value","label","px","ButtonBadges","BadgeVisibility","useState","invisible","setInvisible","row","control","checked","onChange","Badges","Fragment","title","display","aria-label","mt","component","exact","to","my","container","item","xs","md","useFormControl","FormControlContext","useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","undefined","current","_React$useState","valueState","setValue","newValue","SwitchBase","autoFocus","checkedProp","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","hasLabelFor","IconButton","_extends","clsx","root","role","event","input","newChecked","target","withStyles","padding","cursor","opacity","width","height","top","left","margin","zIndex","FormControlLabel","_props$labelPlacement","labelPlacement","controlProps","forEach","key","concat","capitalize","Typography","theme","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","palette","text","Switch","_props$color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","createSvgIcon","createElement","d","FormGroup","_props$row","flexWrap"],"mappings":"mVA2BMA,EAAUC,IAAMC,YAAW,SAACC,EAAOC,GAAR,OAC/B,kBAAC,IAAD,eAAeC,SAAUD,GAASD,OAG9BG,EAAOC,YAAOC,IAAPD,CAAgBE,KAEvBC,EAAQH,YAAOI,IAAPJ,CAAiBE,KAEzBG,EAAWL,YAAOG,EAAPH,CAAcE,KAEzBI,EAASN,YAAOO,IAAPP,CAAkBE,KAE3BM,EAASR,IAAOS,IAAIP,KAEpBQ,EAAUV,YAAOW,IAAPX,CAAmBE,KAE7BU,EAAcZ,YAAOa,IAAPb,CAAuBE,KAE3C,SAASY,IACP,OACE,kBAACf,EAAD,CAAMgB,GAAI,GACR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,eAGA,kBAAC,IAAD,CAAYD,QAAQ,QAAQC,cAAY,GAAxC,oFAKA,kBAACT,EAAD,CAAQO,GAAI,IAEZ,kBAACZ,EAAD,CAAOe,aAAc,EAAGC,MAAM,UAAUC,GAAI,GAC1C,kBAAC,IAAD,OAEF,kBAACjB,EAAD,CAAOe,aAAc,GAAIC,MAAM,YAAYC,GAAI,GAC7C,kBAAC,IAAD,SAOV,SAASC,IACP,OACE,kBAACtB,EAAD,CAAMgB,GAAI,GACR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,cAGA,kBAAC,IAAD,CAAYD,QAAQ,QAAQC,cAAY,GAAxC,mFAKA,kBAACT,EAAD,CAAQO,GAAI,IAEZ,kBAACT,EAAD,CAAQgB,SAAS,SAASH,MAAM,UAAUJ,GAAI,GAC5C,kBAAC,IAAD,CAAMQ,MAAO,GACX,kBAAC,IAAD,CACEC,MACE,kBAACnB,EAAD,CAAUc,MAAM,YAAYD,aAAc,EAAGO,GAAI,GAAjD,cAKJ,kBAAC,IAAD,CAAKD,MAAM,aACX,kBAAC,IAAD,CAAKA,MAAM,eACX,kBAAC,IAAD,CAAKA,MAAM,gBAGf,kBAAClB,EAAD,CAAQgB,SAAS,SAASH,MAAM,YAAYJ,GAAI,GAC9C,kBAAC,IAAD,CAAMQ,MAAO,GACX,kBAAC,IAAD,CACEC,MACE,kBAACnB,EAAD,CAAUc,MAAM,UAAUD,aAAc,EAAGO,GAAI,GAA/C,cAKJ,kBAAC,IAAD,CAAKD,MAAM,aACX,kBAAC,IAAD,CAAKA,MAAM,eACX,kBAAC,IAAD,CAAKA,MAAM,kBAQvB,SAASE,IACP,OACE,kBAAC3B,EAAD,CAAMgB,GAAI,GACR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,iBAGA,kBAAC,IAAD,CAAYD,QAAQ,QAAQC,cAAY,GAAxC,sFAKA,kBAACT,EAAD,CAAQO,GAAI,IAEZ,kBAACZ,EAAD,CAAOgB,MAAM,UAAUD,aAAc,EAAGE,GAAI,GAC1C,kBAAC,IAAD,CAAQJ,QAAQ,aAAhB,WAEF,kBAACb,EAAD,CAAOgB,MAAM,YAAYD,aAAc,EAAGE,GAAI,GAC5C,kBAAC,IAAD,CAAQJ,QAAQ,aAAhB,aAOV,SAASW,IAAmB,IAAD,EACSC,oBAAS,GADlB,mBAClBC,EADkB,KACPC,EADO,KAOzB,OACE,kBAAC/B,EAAD,CAAMgB,GAAI,GACR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,oBAGA,kBAAC,IAAD,CAAYD,QAAQ,QAAQC,cAAY,GAAxC,4EAKA,kBAACT,EAAD,CAAQO,GAAI,IAEZ,6BACE,kBAACZ,EAAD,CAAOgB,MAAM,YAAYD,aAAc,EAAGW,UAAWA,GACnD,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAAWE,KAAG,GACZ,kBAAC,IAAD,CACEC,QACE,kBAAC,IAAD,CACEb,MAAM,UACNc,SAAUJ,EACVK,SA5BgB,WAC5BJ,GAAcD,MA8BNL,MAAM,kBA0CHW,UAlCf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAQC,MAAM,WACd,kBAAC,IAAD,CAAYrB,QAAQ,KAAKC,cAAY,EAACqB,QAAQ,UAA9C,UAIA,kBAAC1B,EAAD,CAAa2B,aAAW,aAAaC,GAAI,GACvC,kBAAC,IAAD,CAAMC,UAAWhD,EAASiD,OAAK,EAACC,GAAG,KAAnC,aAGA,kBAAC,IAAD,CAAMF,UAAWhD,EAASiD,OAAK,EAACC,GAAG,KAAnC,cAGA,kBAAC,IAAD,gBAGF,kBAACjC,EAAD,CAASkC,GAAI,IAEb,kBAAC,IAAD,CAAMC,WAAS,EAAC3C,QAAS,GACvB,kBAAC,IAAD,CAAM4C,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAClC,EAAD,MACA,kBAACO,EAAD,OAEF,kBAAC,IAAD,CAAMyB,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACtB,EAAD,MACA,kBAACC,EAAD,W,iCCnNV,sDAEe,SAASsB,IACtB,OAAOvD,aAAiBwD,O,iCCH1B,6CAEe,SAASC,EAAcC,GACpC,IAAIC,EAAaD,EAAKC,WAClBC,EAAcF,EAAKG,QAMnBC,GALOJ,EAAKK,KACCL,EAAKM,MAGFhE,cAA4BiE,IAAfN,GACAO,SAE7BC,EAAkBnE,WAAe4D,GACjCQ,EAAaD,EAAgB,GAC7BE,EAAWF,EAAgB,GA0B/B,MAAO,CAxBKL,EAAeH,EAAaS,EAmBXpE,eAAkB,SAAUsE,GAClDR,GACHO,EAASC,KAEV,O,iCCvCL,iFAkCIC,EAA0BvE,cAAiB,SAAoBE,EAAOC,GACxE,IAAIqE,EAAYtE,EAAMsE,UAClBC,EAAcvE,EAAMqC,QACpBmC,EAAcxE,EAAMwE,YACpBC,EAAUzE,EAAMyE,QAChBC,EAAY1E,EAAM0E,UAClBC,EAAiB3E,EAAM2E,eACvBC,EAAe5E,EAAM6E,SACrBC,EAAO9E,EAAM8E,KACbC,EAAK/E,EAAM+E,GACXC,EAAahF,EAAMgF,WACnBC,EAAWjF,EAAMiF,SACjBpB,EAAO7D,EAAM6D,KACbqB,EAASlF,EAAMkF,OACf5C,EAAWtC,EAAMsC,SACjB6C,EAAUnF,EAAMmF,QAChBC,EAAWpF,EAAMoF,SACjBC,EAAWrF,EAAMqF,SACjBC,EAAWtF,EAAMsF,SACjBC,EAAOvF,EAAMuF,KACb5D,EAAQ3B,EAAM2B,MACd6D,EAAQC,YAAyBzF,EAAO,CAAC,YAAa,UAAW,cAAe,UAAW,YAAa,iBAAkB,WAAY,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,UAEnQ0F,EAAiBnC,YAAc,CACjCE,WAAYc,EACZZ,QAASgC,QAAQhB,GACjBd,KAAM,aACNC,MAAO,YAEL8B,EAAkBC,YAAeH,EAAgB,GACjDrD,EAAUuD,EAAgB,GAC1BE,EAAkBF,EAAgB,GAElCG,EAAiB1C,cAgCjBwB,EAAWD,EAEXmB,GACsB,qBAAblB,IACTA,EAAWkB,EAAelB,UAI9B,IAAImB,EAAuB,aAATT,GAAgC,UAATA,EACzC,OAAoBzF,gBAAoBmG,IAAYC,YAAS,CAC3DrD,UAAW,OACX6B,UAAWyB,YAAK1B,EAAQ2B,KAAM1B,EAAWrC,GAAWoC,EAAQpC,QAASwC,GAAYJ,EAAQI,UACzFA,SAAUA,EACVS,SAAU,KACVe,UAAMtC,EACNoB,QA7CgB,SAAqBmB,GACjCnB,GACFA,EAAQmB,GAGNP,GAAkBA,EAAeZ,SACnCY,EAAeZ,QAAQmB,IAwCzBpB,OApCe,SAAoBoB,GAC/BpB,GACFA,EAAOoB,GAGLP,GAAkBA,EAAeb,QACnCa,EAAeb,OAAOoB,IA+BxBrG,IAAKA,GACJuF,GAAqB1F,gBAAoB,QAASoG,YAAS,CAC5D5B,UAAWA,EACXjC,QAASkC,EACTI,eAAgBA,EAChBD,UAAWD,EAAQ8B,MACnB1B,SAAUA,EACVE,GAAIiB,GAAejB,EACnBlB,KAAMA,EACNvB,SApCsB,SAA2BgE,GACjD,IAAIE,EAAaF,EAAMG,OAAOpE,QAC9ByD,EAAgBU,GAEZlE,GAEFA,EAASgE,EAAOE,IA+BlBpB,SAAUA,EACVnF,IAAKgF,EACLI,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACN5D,MAAOA,GACNqD,IAAc3C,EAAUmC,EAAcM,MA8G5B4B,gBAvOK,CAClBN,KAAM,CACJO,QAAS,GAEXtE,QAAS,GACTwC,SAAU,GACV0B,MAAO,CACLK,OAAQ,UACRlF,SAAU,WACVmF,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRP,QAAS,EACTQ,OAAQ,IAuNsB,CAChCtD,KAAM,qBADO6C,CAEZrC,I,iCCpPH,uEAgEI+C,EAAgCtH,cAAiB,SAA0BE,EAAOC,GACtED,EAAMqC,QAApB,IACIoC,EAAUzE,EAAMyE,QAChBC,EAAY1E,EAAM0E,UAClBtC,EAAUpC,EAAMoC,QAChBwC,EAAe5E,EAAM6E,SAErBjD,GADW5B,EAAMiF,SACTjF,EAAM4B,OACdyF,EAAwBrH,EAAMsH,eAC9BA,OAA2C,IAA1BD,EAAmC,MAAQA,EAI5D7B,GAHOxF,EAAM6D,KACF7D,EAAMsC,SACTtC,EAAM2B,MACN8D,YAAyBzF,EAAO,CAAC,UAAW,UAAW,YAAa,UAAW,WAAY,WAAY,QAAS,iBAAkB,OAAQ,WAAY,WAE9J+F,EAAiB1C,cACjBwB,EAAWD,EAES,qBAAbC,GAA8D,qBAA3BzC,EAAQpC,MAAM6E,WAC1DA,EAAWzC,EAAQpC,MAAM6E,UAGH,qBAAbA,GAA4BkB,IACrClB,EAAWkB,EAAelB,UAG5B,IAAI0C,EAAe,CACjB1C,SAAUA,GAOZ,MALA,CAAC,UAAW,OAAQ,WAAY,QAAS,YAAY2C,SAAQ,SAAUC,GACnC,qBAAvBrF,EAAQpC,MAAMyH,IAA8C,qBAAfzH,EAAMyH,KAC5DF,EAAaE,GAAOzH,EAAMyH,OAGV3H,gBAAoB,QAASoG,YAAS,CACxDxB,UAAWyB,YAAK1B,EAAQ2B,KAAM1B,EAA8B,QAAnB4C,GAA4B7C,EAAQ,iBAAiBiD,OAAOC,YAAWL,KAAmBzC,GAAYJ,EAAQI,UACvJ5E,IAAKA,GACJuF,GAAqB1F,eAAmBsC,EAASmF,GAA4BzH,gBAAoB8H,IAAY,CAC9G/E,UAAW,OACX6B,UAAWyB,YAAK1B,EAAQ7C,MAAOiD,GAAYJ,EAAQI,WAClDjD,OAmEU8E,iBAjKK,SAAgBmB,GAClC,MAAO,CAELzB,KAAM,CACJ1D,QAAS,cACToF,WAAY,SACZlB,OAAQ,UAERmB,cAAe,SACfC,wBAAyB,cACzBC,YAAa,GACbC,YAAa,GAEb,aAAc,CACZtB,OAAQ,YAKZuB,oBAAqB,CACnBC,cAAe,cACfH,WAAY,GAEZC,aAAc,IAIhBG,kBAAmB,CACjBD,cAAe,iBACfH,WAAY,IAIdK,qBAAsB,CACpBF,cAAe,SACfH,WAAY,IAIdpD,SAAU,GAGVjD,MAAO,CACL,aAAc,CACZL,MAAOsG,EAAMU,QAAQC,KAAK3D,cAqHA,CAChChB,KAAM,uBADO6C,CAEZU,I,iCC7KH,uEAmKIqB,EAAsB3I,cAAiB,SAAgBE,EAAOC,GAChE,IAAIwE,EAAUzE,EAAMyE,QAChBC,EAAY1E,EAAM0E,UAClBgE,EAAe1I,EAAMuB,MACrBA,OAAyB,IAAjBmH,EAA0B,YAAcA,EAChDC,EAAc3I,EAAM4I,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAc7I,EAAM8I,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CrD,EAAQC,YAAyBzF,EAAO,CAAC,UAAW,YAAa,QAAS,OAAQ,SAElF8E,EAAoBhF,gBAAoB,OAAQ,CAClD4E,UAAWD,EAAQsE,QAErB,OAAoBjJ,gBAAoB,OAAQ,CAC9C4E,UAAWyB,YAAK1B,EAAQ2B,KAAM1B,EAAW,CACvC,MAASD,EAAQuE,UACjB,IAAOvE,EAAQwE,SACfL,GAAgB,UAATE,GAAoBrE,EAAQ,OAAOiD,OAAOC,YAAWmB,OAChDhJ,gBAAoBuE,IAAY6B,YAAS,CACvDX,KAAM,WACNT,KAAMA,EACNN,YAAaM,EACbL,QAAS,CACP2B,KAAMD,YAAK1B,EAAQyE,WAAYzE,EAAQ,QAAQiD,OAAOC,YAAWpG,MACjEgF,MAAO9B,EAAQ8B,MACflE,QAASoC,EAAQpC,QACjBwC,SAAUJ,EAAQI,UAEpB5E,IAAKA,GACJuF,IAAsB1F,gBAAoB,OAAQ,CACnD4E,UAAWD,EAAQ0E,YAwGRzC,iBA/RK,SAAgBmB,GAClC,MAAO,CAELzB,KAAM,CACJ1D,QAAS,cACToE,MAAO,GACPC,OAAQ,GACRqC,SAAU,SACVzC,QAAS,GACT0C,UAAW,aACX3H,SAAU,WACV4H,WAAY,EACZnC,OAAQ,EAERY,cAAe,SAEf,eAAgB,CACdwB,YAAa,UAKjBP,UAAW,CACTf,YAAa,GAIfgB,QAAS,CACPf,aAAc,GAIhBgB,WAAY,CACVxH,SAAU,WACVsF,IAAK,EACLC,KAAM,EACNE,OAAQ,EAER5F,MAA8B,UAAvBsG,EAAMU,QAAQhD,KAAmBsC,EAAMU,QAAQiB,KAAK,IAAM3B,EAAMU,QAAQiB,KAAK,KACpFC,WAAY5B,EAAM6B,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAU/B,EAAM6B,YAAYE,SAASC,WAEvC,YAAa,CACXC,UAAW,oBAEb,aAAc,CACZvI,MAA8B,UAAvBsG,EAAMU,QAAQhD,KAAmBsC,EAAMU,QAAQiB,KAAK,KAAO3B,EAAMU,QAAQiB,KAAK,MAEvF,qBAAsB,CACpB3C,QAAS,IAEX,sBAAuB,CACrBA,QAAgC,UAAvBgB,EAAMU,QAAQhD,KAAmB,IAAO,KAKrDwE,aAAc,CACZ,YAAa,CACXxI,MAAOsG,EAAMU,QAAQyB,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAKtC,EAAMU,QAAQyB,QAAQC,KAAMpC,EAAMU,QAAQ6B,OAAOC,cACvE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZ3I,MAA8B,UAAvBsG,EAAMU,QAAQhD,KAAmBsC,EAAMU,QAAQiB,KAAK,KAAO3B,EAAMU,QAAQiB,KAAK,MAEvF,qBAAsB,CACpBU,gBAAiBrC,EAAMU,QAAQyB,QAAQC,MAEzC,sBAAuB,CACrBC,gBAAwC,UAAvBrC,EAAMU,QAAQhD,KAAmBsC,EAAMU,QAAQ+B,OAAOC,MAAQ1C,EAAMU,QAAQ+B,OAAOE,QAKxGC,eAAgB,CACd,YAAa,CACXlJ,MAAOsG,EAAMU,QAAQmC,UAAUT,KAC/B,UAAW,CACTC,gBAAiBC,YAAKtC,EAAMU,QAAQmC,UAAUT,KAAMpC,EAAMU,QAAQ6B,OAAOC,cACzE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZ3I,MAA8B,UAAvBsG,EAAMU,QAAQhD,KAAmBsC,EAAMU,QAAQiB,KAAK,KAAO3B,EAAMU,QAAQiB,KAAK,MAEvF,qBAAsB,CACpBU,gBAAiBrC,EAAMU,QAAQmC,UAAUT,MAE3C,sBAAuB,CACrBC,gBAAwC,UAAvBrC,EAAMU,QAAQhD,KAAmBsC,EAAMU,QAAQ+B,OAAOC,MAAQ1C,EAAMU,QAAQ+B,OAAOE,QAKxGG,UAAW,CACT7D,MAAO,GACPC,OAAQ,GACRJ,QAAS,EACT,WAAY,CACVG,MAAO,GACPC,OAAQ,IAEV,gBAAiB,CACfJ,QAAS,EACT,YAAa,CACXmD,UAAW,sBAMjBzH,QAAS,GAGTwC,SAAU,GAGV0B,MAAO,CACLU,KAAM,QACNH,MAAO,QAITiC,MAAO,CACL6B,UAAW/C,EAAMgD,QAAQ,GACzBX,gBAAiB,eACjBpD,MAAO,GACPC,OAAQ,GACR+D,aAAc,OAIhB3B,MAAO,CACLpC,OAAQ,OACRD,MAAO,OACPgE,aAAc,EACd3D,QAAS,EACTsC,WAAY5B,EAAM6B,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAU/B,EAAM6B,YAAYE,SAASC,WAEvCK,gBAAwC,UAAvBrC,EAAMU,QAAQhD,KAAmBsC,EAAMU,QAAQ+B,OAAOC,MAAQ1C,EAAMU,QAAQ+B,OAAOE,MACpG3D,QAAgC,UAAvBgB,EAAMU,QAAQhD,KAAmB,IAAO,OA2IrB,CAChC1B,KAAM,aADO6C,CAEZ+B,I,iCC5SH,4BAEesC,gBAAcjL,IAAMkL,cAAc,OAAQ,CACvDC,EAAG,kHACD,S,iCCJJ,8CAyBIC,EAAyBpL,cAAiB,SAAmBE,EAAOC,GACtE,IAAIwE,EAAUzE,EAAMyE,QAChBC,EAAY1E,EAAM0E,UAClByG,EAAanL,EAAMmC,IACnBA,OAAqB,IAAfgJ,GAAgCA,EACtC3F,EAAQC,YAAyBzF,EAAO,CAAC,UAAW,YAAa,QAErE,OAAoBF,gBAAoB,MAAOoG,YAAS,CACtDxB,UAAWyB,YAAK1B,EAAQ2B,KAAM1B,EAAWvC,GAAOsC,EAAQtC,KACxDlC,IAAKA,GACJuF,OA6BUkB,gBA1DK,CAElBN,KAAM,CACJ1D,QAAS,OACT0F,cAAe,SACfgD,SAAU,QAIZjJ,IAAK,CACHiG,cAAe,QAgDe,CAChCvE,KAAM,gBADO6C,CAEZwE","file":"static/js/27.1d5efae2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Button,\r\n  CardContent,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Link,\r\n  AppBar as MuiAppBar,\r\n  Badge as MuiBadge,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Switch,\r\n  Tab,\r\n  Tabs,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { Mail as MailIcon } from \"@material-ui/icons\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Badge = styled(MuiBadge)(spacing);\r\n\r\nconst TabBadge = styled(Badge)(spacing);\r\n\r\nconst AppBar = styled(MuiAppBar)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nfunction IconBadges() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Icon Badges\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Examples of badges on icons containing text, using primary and\r\n          secondary colors.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <Badge badgeContent={4} color=\"primary\" mr={4}>\r\n          <MailIcon />\r\n        </Badge>\r\n        <Badge badgeContent={10} color=\"secondary\" mr={4}>\r\n          <MailIcon />\r\n        </Badge>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction TabBadges() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Tab Badges\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Examples of badges on tabs containing text, using primary and\r\n          secondary colors.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <AppBar position=\"static\" color=\"primary\" mb={4}>\r\n          <Tabs value={0}>\r\n            <Tab\r\n              label={\r\n                <TabBadge color=\"secondary\" badgeContent={4} px={4}>\r\n                  Item One\r\n                </TabBadge>\r\n              }\r\n            />\r\n            <Tab label=\"Item Two\" />\r\n            <Tab label=\"Item Three\" />\r\n            <Tab label=\"Item Four\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <AppBar position=\"static\" color=\"secondary\" mb={4}>\r\n          <Tabs value={0}>\r\n            <Tab\r\n              label={\r\n                <TabBadge color=\"primary\" badgeContent={4} px={4}>\r\n                  Item One\r\n                </TabBadge>\r\n              }\r\n            />\r\n            <Tab label=\"Item Two\" />\r\n            <Tab label=\"Item Three\" />\r\n            <Tab label=\"Item Four\" />\r\n          </Tabs>\r\n        </AppBar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction ButtonBadges() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Button Badges\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Examples of badges on buttons containing text, using primary and\r\n          secondary colors.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <Badge color=\"primary\" badgeContent={4} mr={4}>\r\n          <Button variant=\"contained\">Button</Button>\r\n        </Badge>\r\n        <Badge color=\"secondary\" badgeContent={4} mr={4}>\r\n          <Button variant=\"contained\">Button</Button>\r\n        </Badge>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction BadgeVisibility() {\r\n  const [invisible, setInvisible] = useState(false);\r\n\r\n  const handleBadgeVisibility = () => {\r\n    setInvisible(!invisible);\r\n  };\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Badge Visibility\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          The visibility of badges can be controlled using the invisible\r\n          property.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <div>\r\n          <Badge color=\"secondary\" badgeContent={4} invisible={invisible}>\r\n            <MailIcon />\r\n          </Badge>\r\n        </div>\r\n        <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                color=\"primary\"\r\n                checked={!invisible}\r\n                onChange={handleBadgeVisibility}\r\n              />\r\n            }\r\n            label=\"Show Badge\"\r\n          />\r\n        </FormGroup>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nfunction Badges() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Badges\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Badges\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Badges</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <IconBadges />\r\n          <TabBadges />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <ButtonBadges />\r\n          <BadgeVisibility />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Badges;\r\n","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Mail');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);"],"sourceRoot":""}