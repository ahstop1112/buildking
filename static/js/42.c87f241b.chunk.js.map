{"version":3,"sources":["../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanelContext.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js","../node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js","../node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js","pages/components/ExpansionPanels.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@babel/runtime/helpers/esm/toArray.js"],"names":["ExpansionPanelContext","React","ExpansionPanel","props","ref","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","expanded","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","name","state","_useControlled2","_slicedToArray","setExpandedState","handleChange","event","_React$Children$toArr","toArray","_React$Children$toArr2","_toArray","summary","slice","contextValue","toggle","Paper","_extends","clsx","root","rounded","Provider","value","in","timeout","id","role","withStyles","theme","transition","duration","transitions","shortest","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","ExpansionPanelSummary","expandIcon","IconButtonProps","onBlur","onClick","onFocusVisible","_React$useState","focusedState","setFocusedState","_React$useContext","_React$useContext$dis","ButtonBase","focusRipple","disableRipple","component","focused","IconButton","edge","tabIndex","minHeight","padding","spacing","cursor","focus","disabledOpacity","flexGrow","transform","ExpansionPanelDetails","NavLink","forwardRef","innerRef","Card","styled","MuiCard","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","SimpleExpansionPanel","mb","CardContent","Typography","variant","gutterBottom","ExpandMore","Component","ControlledExpansionPanel","panel","setState","this","ExpansionPanels","Fragment","title","aria-label","mt","Link","exact","to","my","Grid","container","item","xs","md","_ref","defaultProp","isControlled","undefined","current","valueState","setValue","newValue","arr"],"mappings":"6UAYeA,MAN0BC,gBAAoB,I,SCwFzDC,EAA8BD,cAAiB,SAAwBE,EAAOC,GAQhF,IAAIC,EAAeF,EAAMG,SACrBC,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAwBN,EAAMO,gBAC9BA,OAA4C,IAA1BD,GAA2CA,EAC7DE,EAAkBR,EAAMS,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAeV,EAAMW,SACrBC,EAAWZ,EAAMY,SACjBC,EAAgBb,EAAMc,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAwBf,EAAMgB,oBAC9BA,OAAgD,IAA1BD,EAAmCE,IAAWF,EACpEG,EAAkBlB,EAAMkB,gBACxBC,EAAQC,YAAyBpB,EAAO,CAAC,WAAY,UAAW,YAAa,kBAAmB,WAAY,WAAY,WAAY,SAAU,sBAAuB,oBAErKqB,EAAiBC,YAAc,CACjCC,WAAYb,EACZc,QAASjB,EACTkB,KAAM,iBACNC,MAAO,aAELC,EAAkBC,YAAeP,EAAgB,GACjDV,EAAWgB,EAAgB,GAC3BE,EAAmBF,EAAgB,GAEnCG,EAAehC,eAAkB,SAAUiC,GAC7CF,GAAkBlB,GAEdC,GACFA,EAASmB,GAAQpB,KAElB,CAACA,EAAUC,EAAUiB,IAEpBG,EAAwBlC,WAAemC,QAAQ/B,GAC/CgC,EAAyBC,YAASH,GAClCI,EAAUF,EAAuB,GACjC/B,EAAW+B,EAAuBG,MAAM,GAExCC,EAAexC,WAAc,WAC/B,MAAO,CACLa,SAAUA,EACVF,SAAUA,EACV8B,OAAQT,KAET,CAACnB,EAAUF,EAAUqB,IACxB,OAAoBhC,gBAAoB0C,IAAOC,YAAS,CACtDpC,UAAWqC,YAAKtC,EAAQuC,KAAMtC,EAAWM,GAAYP,EAAQO,SAAUF,GAAYL,EAAQK,UAAWK,GAAUV,EAAQwC,SACxH3C,IAAKA,EACLa,OAAQA,GACPK,GAAqBrB,gBAAoBD,EAAsBgD,SAAU,CAC1EC,MAAOR,GACNF,GAAuBtC,gBAAoBkB,EAAqByB,YAAS,CAC1EM,GAAIpC,EACJqC,QAAS,QACR9B,GAA+BpB,gBAAoB,MAAO,CAC3D,kBAAmBsC,EAAQpC,MAAMiD,GACjCA,GAAIb,EAAQpC,MAAM,iBAClBkD,KAAM,UACL/C,QA4EUgD,eA/NK,SAAgBC,GAClC,IAAIC,EAAa,CACfC,SAAUF,EAAMG,YAAYD,SAASE,UAEvC,MAAO,CAELb,KAAM,CACJc,SAAU,WACVJ,WAAYD,EAAMG,YAAYG,OAAO,CAAC,UAAWL,GACjD,WAAY,CACVI,SAAU,WACVE,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAAS,KACTC,QAAS,EACTC,gBAAiBb,EAAMc,QAAQC,QAC/Bd,WAAYD,EAAMG,YAAYG,OAAO,CAAC,UAAW,oBAAqBL,IAExE,gBAAiB,CACf,WAAY,CACVe,QAAS,SAGb,aAAc,CACZC,OAAQ,SACR,gBAAiB,CACfC,UAAW,GAEb,eAAgB,CACdC,aAAc,GAEhB,WAAY,CACVP,QAAS,IAGb,iBAAkB,CAChB,WAAY,CACVI,QAAS,SAGb,aAAc,CACZH,gBAAiBb,EAAMc,QAAQM,OAAOC,qBAK1C7B,QAAS,CACP8B,aAAc,EACd,gBAAiB,CACfC,oBAAqBvB,EAAMwB,MAAMF,aACjCG,qBAAsBzB,EAAMwB,MAAMF,cAEpC,eAAgB,CACdI,uBAAwB1B,EAAMwB,MAAMF,aACpCK,wBAAyB3B,EAAMwB,MAAMF,aAErC,kCAAmC,CACjCI,uBAAwB,EACxBC,wBAAyB,KAM/BpE,SAAU,GAGVF,SAAU,MA0JoB,CAChCgB,KAAM,qBADO0B,CAEZpD,G,kBC/JCiF,EAAqClF,cAAiB,SAA+BE,EAAOC,GAQ9F,IAAIE,EAAWH,EAAMG,SACjBC,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClB4E,EAAajF,EAAMiF,WACnBC,EAAkBlF,EAAMkF,gBACxBC,EAASnF,EAAMmF,OACfC,EAAUpF,EAAMoF,QAChBC,EAAiBrF,EAAMqF,eACvBlE,EAAQC,YAAyBpB,EAAO,CAAC,WAAY,UAAW,YAAa,aAAc,kBAAmB,SAAU,UAAW,mBAEnIsF,EAAkBxF,YAAe,GACjCyF,EAAeD,EAAgB,GAC/BE,EAAkBF,EAAgB,GAkBlCG,EAAoB3F,aAAiBD,GACrC6F,EAAwBD,EAAkBhF,SAC1CA,OAAqC,IAA1BiF,GAA2CA,EACtD/E,EAAW8E,EAAkB9E,SAC7B4B,EAASkD,EAAkBlD,OAY/B,OAAoBzC,gBAAoB6F,IAAYlD,YAAS,CAC3DmD,aAAa,EACbC,eAAe,EACfpF,SAAUA,EACVqF,UAAW,MACX,gBAAiBnF,EACjBN,UAAWqC,YAAKtC,EAAQuC,KAAMtC,EAAWI,GAAYL,EAAQK,SAAUE,GAAYP,EAAQO,SAAU4E,GAAgBnF,EAAQ2F,SAC7HV,eAvCuB,SAA4BtD,GACnDyD,GAAgB,GAEZH,GACFA,EAAetD,IAoCjBoD,OAhCe,SAAoBpD,GACnCyD,GAAgB,GAEZL,GACFA,EAAOpD,IA6BTqD,QAnBiB,SAAsBrD,GACnCQ,GACFA,EAAOR,GAGLqD,GACFA,EAAQrD,IAcV9B,IAAKA,GACJkB,GAAqBrB,gBAAoB,MAAO,CACjDO,UAAWqC,YAAKtC,EAAQ2D,QAASpD,GAAYP,EAAQO,WACpDR,GAAW8E,GAA2BnF,gBAAoBkG,IAAYvD,YAAS,CAChFpC,UAAWqC,YAAKtC,EAAQ6E,WAAYtE,GAAYP,EAAQO,UACxDsF,KAAM,MACNH,UAAW,MACXI,SAAU,KACVhD,KAAM,KACN,eAAe,GACdgC,GAAkBD,OAkDR9B,eAjMK,SAAgBC,GAClC,IAAIC,EAAa,CACfC,SAAUF,EAAMG,YAAYD,SAASE,UAEvC,MAAO,CAELb,KAAM,CACJyB,QAAS,OACT+B,UAAW,GACX9C,WAAYD,EAAMG,YAAYG,OAAO,CAAC,aAAc,oBAAqBL,GACzE+C,QAAShD,EAAMiD,QAAQ,EAAG,GAC1B,yBAA0B,CACxBC,OAAQ,WAEV,aAAc,CACZH,UAAW,IAEb,YAAa,CACXlC,gBAAiBb,EAAMc,QAAQM,OAAO+B,OAExC,aAAc,CACZvC,QAASZ,EAAMc,QAAQM,OAAOgC,kBAKlC7F,SAAU,GAGVoF,QAAS,GAGTtF,SAAU,GAGVsD,QAAS,CACPK,QAAS,OACTqC,SAAU,EACVpD,WAAYD,EAAMG,YAAYG,OAAO,CAAC,UAAWL,GACjDgB,OAAQ,SACR,aAAc,CACZA,OAAQ,WAKZY,WAAY,CACVyB,UAAW,eACXrD,WAAYD,EAAMG,YAAYG,OAAO,YAAaL,GAClD,UAAW,CAITY,gBAAiB,eAEnB,aAAc,CACZyC,UAAW,sBAyIe,CAChCjF,KAAM,4BADO0B,CAEZ6B,GCvLC2B,EAAqC7G,cAAiB,SAA+BE,EAAOC,GAQ9F,IAAIG,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBc,EAAQC,YAAyBpB,EAAO,CAAC,UAAW,cAExD,OAAoBF,gBAAoB,MAAO2C,YAAS,CACtDpC,UAAWqC,YAAKtC,EAAQuC,KAAMtC,GAC9BJ,IAAKA,GACJkB,OAwBUgC,eAxDK,SAAgBC,GAClC,MAAO,CAELT,KAAM,CACJyB,QAAS,OACTgC,QAAShD,EAAMiD,QAAQ,EAAG,EAAG,OAmDD,CAChC5E,KAAM,4BADO0B,CAEZwD,G,oCCzCGC,EAAU9G,IAAM+G,YAAW,SAAC7G,EAAOC,GAAR,OAC/B,kBAAC,IAAD,eAAe6G,SAAU7G,GAASD,OAG9B+G,EAAOC,YAAOC,IAAPD,CAAgBX,KAEvBa,EAAUF,YAAOG,IAAPH,CAAmBX,KAE7Be,EAAcJ,YAAOK,IAAPL,CAAuBX,KAErCiB,E,uKAEF,OACE,kBAAC,EAAD,CAAMC,GAAI,GACR,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,0BAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,4GAIA,6BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAuB1C,WAAY,kBAAC2C,EAAA,EAAD,OACjC,kBAACH,EAAA,EAAD,2BAEF,kBAAC,EAAD,KACE,kBAACA,EAAA,EAAD,uIAOJ,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAuBxC,WAAY,kBAAC2C,EAAA,EAAD,OACjC,kBAACH,EAAA,EAAD,2BAEF,kBAAC,EAAD,KACE,kBAACA,EAAA,EAAD,uIAOJ,kBAAC,EAAD,CAAgBhH,UAAQ,GACtB,kBAAC,EAAD,CAAuBwE,WAAY,kBAAC2C,EAAA,EAAD,OACjC,kBAACH,EAAA,EAAD,oCAGC,U,GA1CkB3H,IAAM+H,WAiDnCC,E,4MACJpG,MAAQ,CACNf,SAAU,M,EAGZmB,aAAe,SAAAiG,GAAK,OAAI,SAAChG,EAAOpB,GAC9B,EAAKqH,SAAS,CACZrH,WAAUA,GAAWoH,M,uDAIf,IACApH,EAAasH,KAAKvG,MAAlBf,SAER,OACE,kBAAC,EAAD,CAAM4G,GAAI,GACR,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,8BAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,+FAIA,6BACE,kBAAC,EAAD,CACEhH,SAAuB,WAAbA,EACVC,SAAUqH,KAAKnG,aAAa,WAE5B,kBAAC,EAAD,CAAuBmD,WAAY,kBAAC2C,EAAA,EAAD,OACjC,kBAACH,EAAA,EAAD,0BAEF,kBAAC,EAAD,KACE,kBAACA,EAAA,EAAD,4HAMJ,kBAAC,EAAD,CACE9G,SAAuB,WAAbA,EACVC,SAAUqH,KAAKnG,aAAa,WAE5B,kBAAC,EAAD,CAAuBmD,WAAY,kBAAC2C,EAAA,EAAD,OACjC,kBAACH,EAAA,EAAD,eAEF,kBAAC,EAAD,KACE,kBAACA,EAAA,EAAD,4JAOJ,kBAAC,EAAD,CACE9G,SAAuB,WAAbA,EACVC,SAAUqH,KAAKnG,aAAa,WAE5B,kBAAC,EAAD,CAAuBmD,WAAY,kBAAC2C,EAAA,EAAD,OACjC,kBAACH,EAAA,EAAD,2BAEF,kBAAC,EAAD,KACE,kBAACA,EAAA,EAAD,4IAOJ,kBAAC,EAAD,CACE9G,SAAuB,WAAbA,EACVC,SAAUqH,KAAKnG,aAAa,WAE5B,kBAAC,EAAD,CAAuBmD,WAAY,kBAAC2C,EAAA,EAAD,OACjC,kBAACH,EAAA,EAAD,uBAEF,kBAAC,EAAD,KACE,kBAACA,EAAA,EAAD,6IAOC,U,GApFsB3H,IAAM+H,WA2H9BK,UAhCf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAQC,MAAM,qBACd,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACvD,QAAQ,UAA9C,oBAIA,kBAAC,EAAD,CAAaiE,aAAW,aAAaC,GAAI,GACvC,kBAACC,EAAA,EAAD,CAAMzC,UAAWc,EAAS4B,OAAK,EAACC,GAAG,KAAnC,aAGA,kBAACF,EAAA,EAAD,CAAMzC,UAAWc,EAAS4B,OAAK,EAACC,GAAG,KAAnC,cAGA,kBAAChB,EAAA,EAAD,0BAGF,kBAAC,EAAD,CAASiB,GAAI,IAEb,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACvC,QAAS,GACvB,kBAACsC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,EAAD,OAEF,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,EAAD,W,iCCtMV,6CAEe,SAASzH,EAAc0H,GACpC,IAAIzH,EAAayH,EAAKzH,WAClB0H,EAAcD,EAAKxH,QAMnB0H,GALOF,EAAKvH,KACCuH,EAAKtH,MAGF5B,cAA4BqJ,IAAf5H,GACA6H,SAE7B9D,EAAkBxF,WAAemJ,GACjCI,EAAa/D,EAAgB,GAC7BgE,EAAWhE,EAAgB,GA0B/B,MAAO,CAxBK4D,EAAe3H,EAAa8H,EAmBXvJ,eAAkB,SAAUyJ,GAClDL,GACHI,EAASC,KAEV,O,iCCvCL,0EAIe,SAASpH,EAASqH,GAC/B,OAAO,YAAeA,IAAQ,YAAgBA,IAAQ,YAA2BA,IAAQ","file":"static/js/42.c87f241b.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar ExpansionPanelContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ExpansionPanelContext.displayName = 'ExpansionPanelContext';\n}\n\nexport default ExpansionPanelContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar warnedOnce = false;\n/**\n * ⚠️ The ExpansionPanel component was renamed to Accordion to use a more common naming convention.\n *\n * You should use `import { Accordion } from '@material-ui/core'`\n * or `import Accordion from '@material-ui/core/Accordion'`.\n */\n\nvar ExpansionPanel = /*#__PURE__*/React.forwardRef(function ExpansionPanel(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanel component was renamed to Accordion to use a more common naming convention.', '', \"You should use `import { Accordion } from '@material-ui/core'`\", \"or `import Accordion from '@material-ui/core/Accordion'`\"].join('\\n'));\n    }\n  }\n\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'ExpansionPanel',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from '../ExpansionPanel/ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar warnedOnce = false;\n/**\n * ⚠️ The ExpansionPanelSummary component was renamed to AccordionSummary to use a more common naming convention.\n *\n * You should use `import { AccordionSummary } from '@material-ui/core'`\n * or `import AccordionSummary from '@material-ui/core/AccordionSummary'`.\n */\n\nvar ExpansionPanelSummary = /*#__PURE__*/React.forwardRef(function ExpansionPanelSummary(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanelSummary component was renamed to AccordionSummary to use a more common naming convention.', '', \"You should use `import { AccordionSummary } from '@material-ui/core'`\", \"or `import AccordionSummary from '@material-ui/core/AccordionSummary'`\"].join('\\n'));\n    }\n  }\n\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(ExpansionPanelContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelSummary'\n})(ExpansionPanelSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar warnedOnce = false;\n/**\n * ⚠️ The ExpansionPanelDetails component was renamed to AccordionDetails to use a more common naming convention.\n *\n * You should use `import { AccordionDetails } from '@material-ui/core'`\n * or `import AccordionDetails from '@material-ui/core/AccordionDetails'`.\n */\n\nvar ExpansionPanelDetails = /*#__PURE__*/React.forwardRef(function ExpansionPanelDetails(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanelDetails component was renamed to AccordionDetails to use a more common naming convention.', '', \"You should use `import { AccordionDetails } from '@material-ui/core'`\", \"or `import AccordionDetails from '@material-ui/core/AccordionActions'`\"].join('\\n'));\n    }\n  }\n\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  CardContent,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nclass SimpleExpansionPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Simple Expansion Panel\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            A lightweight container that may either stand alone or be connected\r\n            to a larger surface, such as a card.\r\n          </Typography>\r\n          <div>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>Expansion Panel 1</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                  Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                  eget.\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>Expansion Panel 2</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                  Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                  eget.\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel disabled>\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>Disabled Expansion Panel</Typography>\r\n              </ExpansionPanelSummary>\r\n            </ExpansionPanel>\r\n          </div>{\" \"}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass ControlledExpansionPanel extends React.Component {\r\n  state = {\r\n    expanded: null\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { expanded } = this.state;\r\n\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Controlled Expansion Panel\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Extend the default panel behavior to create an accordion with the\r\n            ExpansionPanel component.\r\n          </Typography>\r\n          <div>\r\n            <ExpansionPanel\r\n              expanded={expanded === \"panel1\"}\r\n              onChange={this.handleChange(\"panel1\")}\r\n            >\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>General settings</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  Nulla facilisi. Phasellus sollicitudin nulla et quam mattis\r\n                  feugiat. Aliquam eget maximus est, id dignissim quam.\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel\r\n              expanded={expanded === \"panel2\"}\r\n              onChange={this.handleChange(\"panel2\")}\r\n            >\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>Users</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  Donec placerat, lectus sed mattis semper, neque lectus feugiat\r\n                  lectus, varius pulvinar diam eros in elit. Pellentesque\r\n                  convallis laoreet laoreet.\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel\r\n              expanded={expanded === \"panel3\"}\r\n              onChange={this.handleChange(\"panel3\")}\r\n            >\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>Advanced settings</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  Nunc vitae orci ultricies, auctor nunc in, volutpat nisl.\r\n                  Integer sit amet egestas eros, vitae egestas augue. Duis vel\r\n                  est augue.\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel\r\n              expanded={expanded === \"panel4\"}\r\n              onChange={this.handleChange(\"panel4\")}\r\n            >\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>Personal data</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  Nunc vitae orci ultricies, auctor nunc in, volutpat nisl.\r\n                  Integer sit amet egestas eros, vitae egestas augue. Duis vel\r\n                  est augue.\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </div>{\" \"}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ExpansionPanels() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Expansion Panels\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Expansion Panels\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Expansion Panels</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleExpansionPanel />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <ControlledExpansionPanel />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ExpansionPanels;\r\n","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"sourceRoot":""}