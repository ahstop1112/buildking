(this["webpackJsonpmaterial-app"]=this["webpackJsonpmaterial-app"]||[]).push([[49],{2480:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(7),i=n(67),l=n(93),m=n(597),c=n(610),s=n(85),u=n(607),h=n(604),p=n(579),d=n(522),g=n(624),b=r.a.forwardRef((function(e,t){return r.a.createElement(i.c,Object.assign({innerRef:t},e))})),E=Object(o.d)(m.a)(d.b),f=Object(o.d)(c.a)(d.b),y=Object(o.d)(s.a)(d.b);function v(){return r.a.createElement(u.a,{mb:10},r.a.createElement(y,{variant:"h3",gutterBottom:!0},"Introduction"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"This theme uses Material-UI in combination with Styled-Components. On this page we try to cover the basics on how to adjust the color palette and other styles."))}function w(){return r.a.createElement(u.a,{mb:10},r.a.createElement(y,{variant:"h3",gutterBottom:!0},"How it works"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"Material-UI's ",r.a.createElement(h.a,{href:"https://material-ui.com/customization/theming/#createmuitheme-options-args-theme",target:"_blank",rel:"noreferrer noopener"},"createMuiTheme")," is used to extend Material-UI's default styling. Material App is using both the Material-UI ThemeProvider as Styled-Components ThemeProvider. This way, global theme variables will be applied to both Material-UI's components as custom Styled-Components."),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"How to access theme variables from a component:",r.a.createElement(g.a,null,"const CustomComponent = styled.div`\n  background: ${props => props.theme.palette.primary.main};\n  color: ${props => props.theme.palette.common.white};\n  padding: ${props => props.theme.spacing(2)}px;\n`;\n\nconst Custom = ({children}) => (\n  <CustomComponent>\n    {children}\n  </CustomComponent>\n);")))}function j(){return r.a.createElement(u.a,{mb:10},r.a.createElement(y,{variant:"h3",gutterBottom:!0},"Adjusting theme variables"),r.a.createElement(y,{variant:"subtitle1",gutterBottom:!0,my:4},"In the ",r.a.createElement("code",null,"/theme")," folder you can find all the theme variables. They are categorized by palettes, shadows, typography, overrides and theme variants. You are able to control each on them inndividually. Typography example:",r.a.createElement(g.a,null,'const typography = {\n  h1: {\n    fontSize: "2rem",\n    fontWeight: 600,\n    lineHeight: 1.2\n  },\n  h2: {\n    fontSize: "1.75rem",\n    fontWeight: 600,\n    lineHeight: 1.2\n  },\n  h3: {\n    fontSize: "1.5rem",\n    fontWeight: 600,\n    lineHeight: 1.2\n  },\n  //etc\n};')))}t.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.Helmet,{title:"Theming"}),r.a.createElement(p.a,{container:!0,spacing:6,justify:"center"},r.a.createElement(p.a,{item:!0,xs:12,lg:9,xl:7},r.a.createElement(y,{variant:"h2",gutterBottom:!0,display:"inline"},"Theming"),r.a.createElement(f,{"aria-label":"Breadcrumb",mt:2},r.a.createElement(h.a,{component:b,exact:!0,to:"/"},"Dashboard"),r.a.createElement(h.a,{component:b,exact:!0,to:"/documentation/welcome"},"Documentation"),r.a.createElement(y,null,"Theming")),r.a.createElement(E,{my:6}),r.a.createElement(v,null),r.a.createElement(w,null),r.a.createElement(j,null))))}},624:function(e,t,n){"use strict";var a=n(9),r=n(0),o=n.n(r),i=n(7),l=n(2495),m=n(2477);function c(){var e=Object(a.a)(["\n  border-radius: 3px;\n  padding: ","px !important;\n  background-color: #1B2430 !important;\n"]);return c=function(){return e},e}var s=Object(i.d)(l.a)(c(),(function(e){return e.theme.spacing(3)}));t.a=function(e){var t=e.children;return o.a.createElement(s,{language:"javascript",style:m.a},t)}}}]);
//# sourceMappingURL=49.26dd43c9.chunk.js.map