{"version":3,"sources":["pages/components/Snackbars.js","../node_modules/@material-ui/icons/esm/Close.js","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","Button","MuiButton","SimpleSnackbar","state","open","handleClick","setState","handleClose","event","reason","mb","variant","gutterBottom","mt","onClick","this","color","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","key","size","aria-label","Component","PositionedSnackbar","mr","ConsecutiveSnackbar","queue","messageInfo","push","Date","getTime","processQueue","length","shift","handleExited","onExited","DirectionSnackbar","Transition","direction","transitionLeft","transitionUp","transitionRight","transitionDown","TransitionComponent","TransitionSnackbar","Fade","Snackbars","Fragment","title","display","component","exact","to","my","container","item","xs","md","createSvgIcon","createElement","d","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","children","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","nodeRef","mountedRef","syntheticEventRef","current","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","handleClickAway","useEventCallback","insideReactTree","document","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","ownerDocument","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","doc","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","Snackbar","_props$anchorOrigin","_props$autoHideDurati","classes","className","ClickAwayListenerProps","_props$disableWindowB","disableWindowBlurListener","onEnter","onEntered","onEntering","onExit","onExiting","onMouseEnter","onMouseLeave","resumeHideDuration","_props$TransitionComp","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","other","_objectWithoutProperties","timerAutoHide","_React$useState","exited","setExited","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","window","_extends","clsx","root","concat","capitalize","appear","in","createChainedFunction","timeout","SnackbarContent","withStyles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","alignItems","anchorOriginTopCenter","_defineProperty","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","name","_props$role","role","square","elevation","emphasis","palette","type","backgroundColor","emphasize","background","default","typography","body2","getContrastText","flexWrap","padding","borderRadius","shape","flexGrow","minWidth","marginLeft","paddingLeft","marginRight"],"mappings":"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","file":"static/js/34.aeffdf47.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  CardContent,\r\n  Fade,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button as MuiButton,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Paper as MuiPaper,\r\n  Slide,\r\n  Snackbar,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nclass SimpleSnackbar extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Simple Snackbar\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            A basic snackbar that aims to reproduce Google Keep's snackbar\r\n            behavior.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Open simple snackbar\r\n            </Button>\r\n            <Snackbar\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\"\r\n              }}\r\n              open={this.state.open}\r\n              autoHideDuration={6000}\r\n              onClose={this.handleClose}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">Note archived</span>}\r\n              action={[\r\n                <Button\r\n                  key=\"undo\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  UNDO\r\n                </Button>,\r\n                <IconButton\r\n                  key=\"close\"\r\n                  aria-label=\"Close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              ]}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass PositionedSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  };\r\n\r\n  handleClick = state => () => {\r\n    this.setState({ open: true, ...state });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { vertical, horizontal, open } = this.state;\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Positioned Snackbar\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            There may be circumstances when the placement of the snackbar needs\r\n            to be more flexible.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"top\",\r\n                horizontal: \"center\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Top-Center\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"top\",\r\n                horizontal: \"right\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Top-Right\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Bottom-Right\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Bottom-Center\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Bottom-Left\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Top-Left\r\n            </Button>\r\n            <Snackbar\r\n              anchorOrigin={{ vertical, horizontal }}\r\n              open={open}\r\n              onClose={this.handleClose}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConsecutiveSnackbar extends React.Component {\r\n  queue = [];\r\n\r\n  state = {\r\n    open: false,\r\n    messageInfo: {}\r\n  };\r\n\r\n  handleClick = message => () => {\r\n    this.queue.push({\r\n      message,\r\n      key: new Date().getTime()\r\n    });\r\n\r\n    if (this.state.open) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      this.setState({ open: false });\r\n    } else {\r\n      this.processQueue();\r\n    }\r\n  };\r\n\r\n  processQueue = () => {\r\n    if (this.queue.length > 0) {\r\n      this.setState({\r\n        messageInfo: this.queue.shift(),\r\n        open: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleExited = () => {\r\n    this.processQueue();\r\n  };\r\n\r\n  render() {\r\n    const { messageInfo } = this.state;\r\n\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Consecutive Snackbar\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Per Google's guidelines, when a second snackbar is triggered while\r\n            the first is displayed, the first should start the contraction\r\n            motion downwards before the second one animates upwards.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick(\"Message A\")}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Show message A\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick(\"Message B\")}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Show message B\r\n            </Button>\r\n            <Snackbar\r\n              key={messageInfo.key}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\"\r\n              }}\r\n              open={this.state.open}\r\n              autoHideDuration={6000}\r\n              onClose={this.handleClose}\r\n              onExited={this.handleExited}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">{messageInfo.message}</span>}\r\n              action={[\r\n                <Button\r\n                  key=\"undo\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  UNDO\r\n                </Button>,\r\n                <IconButton\r\n                  key=\"close\"\r\n                  aria-label=\"Close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              ]}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass DirectionSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n    Transition: null\r\n  };\r\n\r\n  handleClick = Transition => () => {\r\n    this.setState({ open: true, Transition });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  transitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n  }\r\n\r\n  transitionUp(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n  transitionRight(props) {\r\n    return <Slide {...props} direction=\"right\" />;\r\n  }\r\n\r\n  transitionDown(props) {\r\n    return <Slide {...props} direction=\"down\" />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Control Direction\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Change the direction of the transition. Slide is the default\r\n            transition.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick(this.transitionLeft)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Right\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick(this.transitionUp)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Up\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick(this.transitionRight)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Left\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick(this.transitionDown)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Down\r\n            </Button>\r\n            <Snackbar\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              TransitionComponent={this.state.Transition}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass TransitionSnackbar extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Snackbar Transition\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Use a different transition (fade).\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Open with Fade Transition\r\n            </Button>\r\n            <Snackbar\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              TransitionComponent={Fade}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Snackbars() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Snackbars\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Snackbars\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Snackbars</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleSnackbar />\r\n          <ConsecutiveSnackbar />\r\n          <TransitionSnackbar />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <PositionedSnackbar />\r\n          <DirectionSnackbar />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Snackbars;\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var mountedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!mountedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);"],"sourceRoot":""}