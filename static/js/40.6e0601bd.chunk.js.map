{"version":3,"sources":["pages/pages/Pricing.js","../node_modules/@material-ui/icons/esm/StarBorder.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","CardHeader","MuiCardHeader","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Price","div","theme","Header","Pricing","Fragment","title","variant","gutterBottom","display","aria-label","mt","component","exact","to","my","align","container","justify","item","xs","lg","alignItems","md","p","titleTypographyProps","pb","pt","color","fullWidth","subheader","subheaderTypographyProps","action","createSvgIcon","createElement","d","avatar","classes","className","_props$component","Component","_props$disableTypogra","disableTypography","subheaderProp","titleProp","other","_objectWithoutProperties","type","Typography","_extends","clsx","root","content","withStyles","padding","flex","marginRight","alignSelf","marginTop","name","CardActions","_props$disableSpacing","disableSpacing","marginLeft"],"mappings":"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","file":"static/js/40.6e0601bd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Button,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CardHeader as MuiCardHeader,\r\n  Divider as MuiDivider,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { StarBorder as StarIcon } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst CardHeader = styled(MuiCardHeader)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Price = styled.div`\r\n  text-align: center;\r\n  padding-bottom: ${props => props.theme.spacing(3)}px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  padding: ${props => props.theme.spacing(6)}px 0;\r\n`;\r\n\r\nfunction Pricing() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Pricing\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Pricing\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Pages\r\n        </Link>\r\n        <Typography>Pricing</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Header>\r\n        <Typography variant=\"h3\" gutterBottom align=\"center\">\r\n          We have a plan for everyone\r\n        </Typography>\r\n\r\n        <Typography variant=\"subtitle1\" gutterBottom align=\"center\">\r\n          Whether you're a business or an individual, 14-day trial no credit\r\n          card required.\r\n        </Typography>\r\n      </Header>\r\n\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={12} lg={10}>\r\n          <Grid container spacing={6} alignItems=\"flex-end\">\r\n            <Grid item xs={12} md={4}>\r\n              <Card p={5}>\r\n                <CardHeader\r\n                  title=\"Free\"\r\n                  titleTypographyProps={{ align: \"center\" }}\r\n                  pb={0}\r\n                  pt={2}\r\n                />\r\n                <CardContent>\r\n                  <Price>\r\n                    <Typography\r\n                      component=\"h2\"\r\n                      variant=\"h1\"\r\n                      color=\"textPrimary\"\r\n                      align=\"center\"\r\n                      display=\"inline\"\r\n                    >\r\n                      $0\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      color=\"textSecondary\"\r\n                      align=\"center\"\r\n                      display=\"inline\"\r\n                    >\r\n                      /mo\r\n                    </Typography>\r\n                  </Price>\r\n                  <Typography variant=\"subtitle1\" align=\"center\">\r\n                    10 users included\r\n                    <br />\r\n                    2 GB of storage\r\n                    <br />\r\n                    Help center access\r\n                    <br />\r\n                    Email support\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant=\"outlined\" color=\"primary\">\r\n                    Sign up for free\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <Card p={5}>\r\n                <CardHeader\r\n                  title=\"Free\"\r\n                  subheader=\"Most popular\"\r\n                  titleTypographyProps={{ align: \"center\" }}\r\n                  subheaderTypographyProps={{ align: \"center\" }}\r\n                  action={<StarIcon />}\r\n                  pb={0}\r\n                  pt={2}\r\n                />\r\n                <CardContent>\r\n                  <Price>\r\n                    <Typography\r\n                      component=\"h2\"\r\n                      variant=\"h1\"\r\n                      color=\"textPrimary\"\r\n                      align=\"center\"\r\n                      display=\"inline\"\r\n                    >\r\n                      $15\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      color=\"textSecondary\"\r\n                      align=\"center\"\r\n                      display=\"inline\"\r\n                    >\r\n                      /mo\r\n                    </Typography>\r\n                  </Price>\r\n                  <Typography variant=\"subtitle1\" align=\"center\">\r\n                    20 users included\r\n                    <br />\r\n                    10 GB of storage\r\n                    <br />\r\n                    Help center access\r\n                    <br />\r\n                    Priority email support\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant=\"contained\" color=\"primary\">\r\n                    Get started\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <Card p={5}>\r\n                <CardHeader\r\n                  title=\"Enterprise\"\r\n                  titleTypographyProps={{ align: \"center\" }}\r\n                  pb={0}\r\n                  pt={2}\r\n                />\r\n                <CardContent>\r\n                  <Price>\r\n                    <Typography\r\n                      component=\"h2\"\r\n                      variant=\"h1\"\r\n                      color=\"textPrimary\"\r\n                      align=\"center\"\r\n                      display=\"inline\"\r\n                    >\r\n                      $30\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      color=\"textSecondary\"\r\n                      align=\"center\"\r\n                      display=\"inline\"\r\n                    >\r\n                      /mo\r\n                    </Typography>\r\n                  </Price>\r\n                  <Typography variant=\"subtitle1\" align=\"center\">\r\n                    50 users included\r\n                    <br />\r\n                    30 GB of storage\r\n                    <br />\r\n                    Help center access\r\n                    <br />\r\n                    Phone & email support\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant=\"outlined\" color=\"primary\">\r\n                    Contact us\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Pricing;\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n}), 'StarBorder');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);"],"sourceRoot":""}